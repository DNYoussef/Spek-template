npm warn Unknown cli config "--coverage". This will stop working in the next major version of npm.

> spek-working-implementations@1.0.0 test
> jest --verbose

FAIL tests/golden/example.golden.test.js
  Email Normalization (Golden Tests)
    ‚àö case 1: '  USER@EXAMPLE.COM  ' -> 'user@example.com' (16 ms)
    ‚àö case 2: 'Test.User+Tag@Domain.Org' -> 'test.user+tag@domain.org'
    ‚àö case 3: '' -> '' (1 ms)
    ‚àö case 4: '   ' -> ''
    ‚àö case 5: 'simple@test.com' -> 'simple@test.com' (1 ms)
    ‚àö case 6: 'CAPS@DOMAIN.NET' -> 'caps@domain.net'
    ‚àö case 7: '	
 user@test.com 
' -> 'user@test.com'
    √ó case 8: 'unicode.[U+6D4B][U+8BD5]@example.org' -> 'unicode.[U+6D4B][U+8BD5]@example.org' (6 ms)
    ‚àö edge case 1: object input -> ''
    ‚àö edge case 2: undefined input -> '' (1 ms)
    ‚àö edge case 3: number input -> ''
    ‚àö edge case 4: object input -> '' (1 ms)
    ‚àö edge case 5: object input -> ''
  Configuration Parsing (Golden Tests)
    ‚àö simple key-value pairs (1 ms)
    ‚àö with comments and empty lines (1 ms)
    ‚àö values with equals signs
    ‚àö whitespace handling (1 ms)
    ‚àö empty configuration
    ‚àö only comments
  Path Processing (Golden Tests)
    ‚àö path 1: '/home/user/docs' -> '/home/user/docs' (1 ms)
    ‚àö path 2: '/home/user/../user/docs' -> '/home/user/docs'
    ‚àö path 3: '/home/./user/docs' -> '/home/user/docs' (1 ms)
    ‚àö path 4: '/home/user/docs/.././../user/docs' -> '/home/user/docs'
    ‚àö path 5: '\windows\path\to\file' -> '/windows/path/to/file'
    ‚àö path 6: '/home//user///docs' -> '/home/user/docs' (1 ms)
    ‚àö path 7: '/../../../etc/passwd' -> '/etc/passwd'
    ‚àö path 8: '' -> '/'
    ‚àö path 9: '/' -> '/' (1 ms)
    ‚àö path 10: '.' -> '/'
    ‚àö path 11: './relative/path' -> '/relative/path'
  Data Transformation (Golden Tests)
    ‚àö simple CSV data (1 ms)
    ‚àö CSV with extra whitespace (1 ms)
    ‚àö single column
    ‚àö empty CSV
    ‚àö header only (1 ms)
  API Response Formatting (Golden Tests)
    ‚àö successful response with data
    ‚àö error response (1 ms)
    ‚àö no data response
    ‚àö default status response

  ‚óè Email Normalization (Golden Tests) ‚Ä∫ case 8: 'unicode.[U+6D4B][U+8BD5]@example.org' -> 'unicode.[U+6D4B][U+8BD5]@example.org'

    expect(received).toBe(expected) // Object.is equality

    Expected: "unicode.[U+6D4B][U+8BD5]@example.org"
    Received: "unicode.[u+6d4b][u+8bd5]@example.org"

    [0m [90m 22 |[39m   testCases[33m.[39mforEach(({ input[33m,[39m expected }[33m,[39m index) [33m=>[39m {
     [90m 23 |[39m     test([32m`case ${index + 1}: '${input}' -> '${expected}'`[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 24 |[39m       expect(normalizeEmail(input))[33m.[39mtoBe(expected)[33m;[39m
     [90m    |[39m                                     [31m[1m^[22m[39m
     [90m 25 |[39m     })[33m;[39m
     [90m 26 |[39m   })[33m;[39m
     [90m 27 |[39m[0m

      at Object.toBe (tests/golden/example.golden.test.js:24:37)

FAIL tests/configuration/error-handling.test.js
  Configuration Error Handling and Recovery Testing
    Configuration File Loading Errors
      ‚àö should handle missing configuration file gracefully (15 ms)
      ‚àö should handle corrupted YAML file gracefully (6 ms)
      √ó should handle file permission errors (4 ms)
      ‚àö should provide meaningful error messages for configuration issues (3 ms)
    Schema Validation Error Handling
      ‚àö should handle missing required sections gracefully (2 ms)
      ‚àö should handle invalid environment variable references (1 ms)
      ‚àö should handle circular references in configuration (1 ms)
    Runtime Error Recovery
      ‚àö should fallback to default values when configuration is invalid (3 ms)
      ‚àö should handle configuration reload failures gracefully (7 ms)
      ‚àö should handle environment-specific configuration failures (2 ms)
    Validation Error Recovery
      ‚àö should provide detailed validation error context (2 ms)
    System Recovery and Health Checks
      ‚àö should perform configuration health checks (3 ms)

  ‚óè Configuration Error Handling and Recovery Testing ‚Ä∫ Configuration File Loading Errors ‚Ä∫ should handle file permission errors

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

    [0m [90m 141 |[39m
     [90m 142 |[39m       [36mconst[39m result [33m=[39m loadConfigSafely(protectedConfigPath)[33m;[39m
    [31m[1m>[22m[39m[90m 143 |[39m       expect(result[33m.[39msuccess)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 144 |[39m       expect([[32m'EACCES'[39m[33m,[39m [32m'EPERM'[39m])[33m.[39mtoContain(result[33m.[39mcode)[33m;[39m
     [90m 145 |[39m
     [90m 146 |[39m       [90m// Cleanup[39m[0m

      at Object.toBe (tests/configuration/error-handling.test.js:143:30)

FAIL tests/configuration/performance-impact.test.js
  Configuration Performance Impact Testing
    Configuration Loading Performance
      √ó should load enterprise configuration within acceptable time (17 ms)
      √ó should load multiple configuration files efficiently (5 ms)
      ‚àö should handle configuration parsing under memory pressure (3 ms)
      ‚àö should cache configuration to improve subsequent access (4 ms)
    Configuration Validation Performance
      √ó should validate configuration schema efficiently (3 ms)
      ‚àö should perform deep validation within performance bounds (1 ms)
      ‚àö should validate environment overrides efficiently (1 ms)
    Runtime Configuration Access Performance
      √ó should access nested configuration values efficiently
      ‚àö should handle bulk configuration reads efficiently (1 ms)
      ‚àö should optimize configuration access with memoization (2 ms)
    Configuration Merge Performance
      ‚àö should merge environment overrides efficiently (7 ms)
      ‚àö should handle deep configuration merging efficiently (2 ms)
    Memory Usage and Garbage Collection
      √ó should not cause memory leaks during repeated configuration loading (1 ms)
      √ó should efficiently handle large configuration objects (12 ms)

  ‚óè Configuration Performance Impact Testing ‚Ä∫ Configuration Loading Performance ‚Ä∫ should load enterprise configuration within acceptable time

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 48 |[39m       expect(result[33m.[39mloadTime)[33m.[39mtoBeLessThan(maxLoadTimeMs)[33m;[39m
     [90m 49 |[39m       expect(result[33m.[39mconfig)[33m.[39mtoBeDefined()[33m;[39m
    [31m[1m>[22m[39m[90m 50 |[39m       expect(result[33m.[39mconfig[33m.[39mschema)[33m.[39mtoBeDefined()[33m;[39m
     [90m    |[39m                                    [31m[1m^[22m[39m
     [90m 51 |[39m     })[33m;[39m
     [90m 52 |[39m
     [90m 53 |[39m     test([32m'should load multiple configuration files efficiently'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

      at Object.toBeDefined (tests/configuration/performance-impact.test.js:50:36)

  ‚óè Configuration Performance Impact Testing ‚Ä∫ Configuration Loading Performance ‚Ä∫ should load multiple configuration files efficiently

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 67 |[39m       expect(totalLoadTime)[33m.[39mtoBeLessThan(maxTotalLoadTimeMs)[33m;[39m
     [90m 68 |[39m       expect(configs)[33m.[39mtoHaveLength([35m2[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 69 |[39m       expect(configs[[35m0[39m][33m.[39mschema)[33m.[39mtoBeDefined()[33m;[39m
     [90m    |[39m                                 [31m[1m^[22m[39m
     [90m 70 |[39m       expect(configs[[35m1[39m][33m.[39mquality_gates)[33m.[39mtoBeDefined()[33m;[39m
     [90m 71 |[39m     })[33m;[39m
     [90m 72 |[39m[0m

      at Object.toBeDefined (tests/configuration/performance-impact.test.js:69:33)

  ‚óè Configuration Performance Impact Testing ‚Ä∫ Configuration Validation Performance ‚Ä∫ should validate configuration schema efficiently

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 168 |[39m       [36mconst[39m result [33m=[39m validateConfig(enterpriseConfig)[33m;[39m
     [90m 169 |[39m       expect(result[33m.[39mvalidationTime)[33m.[39mtoBeLessThan(maxValidationTimeMs)[33m;[39m
    [31m[1m>[22m[39m[90m 170 |[39m       expect(result[33m.[39misValid)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 171 |[39m     })[33m;[39m
     [90m 172 |[39m
     [90m 173 |[39m     test([32m'should perform deep validation within performance bounds'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toBe (tests/configuration/performance-impact.test.js:170:30)

  ‚óè Configuration Performance Impact Testing ‚Ä∫ Runtime Configuration Access Performance ‚Ä∫ should access nested configuration values efficiently

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 292 |[39m         [36mconst[39m result [33m=[39m getConfigValue(enterpriseConfig[33m,[39m path)[33m;[39m
     [90m 293 |[39m         expect(result[33m.[39maccessTime)[33m.[39mtoBeLessThan(maxAccessTimeMs)[33m;[39m
    [31m[1m>[22m[39m[90m 294 |[39m         expect(result[33m.[39mvalue)[33m.[39mtoBeDefined()[33m;[39m
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 295 |[39m       })[33m;[39m
     [90m 296 |[39m     })[33m;[39m
     [90m 297 |[39m[0m

      at toBeDefined (tests/configuration/performance-impact.test.js:294:30)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/configuration/performance-impact.test.js:291:17)

  ‚óè Configuration Performance Impact Testing ‚Ä∫ Memory Usage and Garbage Collection ‚Ä∫ should not cause memory leaks during repeated configuration loading

    TypeError: Cannot read properties of undefined (reading 'enabled')

    [0m [90m 492 |[39m         
     [90m 493 |[39m         [90m// Access some configuration values to ensure they're processed[39m
    [31m[1m>[22m[39m[90m 494 |[39m         [36mconst[39m _ [33m=[39m config[33m.[39menterprise[33m.[39menabled[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 495 |[39m         [36mconst[39m __ [33m=[39m config[33m.[39msecurity[33m.[39mauthentication[33m.[39menabled[33m;[39m
     [90m 496 |[39m       }
     [90m 497 |[39m       [0m

      at Object.enabled (tests/configuration/performance-impact.test.js:494:37)

  ‚óè Configuration Performance Impact Testing ‚Ä∫ Memory Usage and Garbage Collection ‚Ä∫ should efficiently handle large configuration objects

    TypeError: Cannot read properties of undefined (reading 'enabled')

    [0m [90m 537 |[39m       [36mconst[39m serialized [33m=[39m [33mJSON[39m[33m.[39mstringify(largeConfig)[33m;[39m
     [90m 538 |[39m       [36mconst[39m parsed [33m=[39m [33mJSON[39m[33m.[39mparse(serialized)[33m;[39m
    [31m[1m>[22m[39m[90m 539 |[39m       [36mconst[39m enterpriseEnabled [33m=[39m parsed[33m.[39menterprise[33m.[39menabled[33m;[39m
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 540 |[39m       
     [90m 541 |[39m       [36mconst[39m end [33m=[39m performance[33m.[39mnow()[33m;[39m
     [90m 542 |[39m       [36mconst[39m processingTime [33m=[39m end [33m-[39m start[33m;[39m[0m

      at Object.enabled (tests/configuration/performance-impact.test.js:539:51)

FAIL tests/configuration/migration-testing.test.js
  Configuration Migration Testing
    Legacy Configuration Preservation
      √ó should preserve legacy detector configuration paths (19 ms)
      √ó should have valid conflict resolution strategy (1 ms)
      √ó should enable migration warnings
    Detector Configuration Migration
      ‚àö should migrate values detector thresholds (2 ms)
      ‚àö should migrate position detector configuration (2 ms)
      ‚àö should migrate god object detector thresholds (1 ms)
      ‚àö should migrate magic literal detector configuration (2 ms)
      ‚àö should migrate algorithm detector settings (1 ms)
    Analysis Configuration Migration
      ‚àö should migrate global analysis settings (1 ms)
      ‚àö should migrate quality gate thresholds (3 ms)
      ‚àö should migrate connascence weights and scoring (5 ms)
      ‚àö should migrate file processing configuration (1 ms)
      ‚àö should migrate error handling configuration (1 ms)
      ‚àö should migrate reporting configuration (1 ms)
    Migration Compatibility Tests
      ‚àö should maintain backward compatibility for detector thresholds (1 ms)
      ‚àö should maintain backward compatibility for analysis policies (1 ms)
      ‚àö should preserve legacy file processing settings (1 ms)
      ‚àö should preserve legacy integration settings (1 ms)
    Enterprise Configuration Enhancement
      √ó should enhance legacy configuration with enterprise features
      √ó should provide enterprise-level quality gates
      √ó should enhance performance monitoring capabilities
    Migration Path Validation
      √ó should provide clear migration indicators
      √ó should maintain version consistency
      √ó should validate migration conflict resolution (1 ms)
    Data Integrity During Migration
      ‚àö should preserve all legacy threshold values (1 ms)
      ‚àö should preserve exclusion patterns and file types (1 ms)

  ‚óè Configuration Migration Testing ‚Ä∫ Legacy Configuration Preservation ‚Ä∫ should preserve legacy detector configuration paths

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 34 |[39m     test([32m'should preserve legacy detector configuration paths'[39m[33m,[39m () [33m=>[39m {
     [90m 35 |[39m       [36mconst[39m legacyIntegration [33m=[39m enterpriseConfig[33m.[39mlegacy_integration[33m;[39m
    [31m[1m>[22m[39m[90m 36 |[39m       expect(legacyIntegration)[33m.[39mtoBeDefined()[33m;[39m
     [90m    |[39m                                 [31m[1m^[22m[39m
     [90m 37 |[39m       expect(legacyIntegration[33m.[39mpreserve_existing_configs)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 38 |[39m       expect(legacyIntegration[33m.[39mdetector_config_path)[33m.[39mtoBe([32m'analyzer/config/detector_config.yaml'[39m)[33m;[39m
     [90m 39 |[39m       expect(legacyIntegration[33m.[39manalysis_config_path)[33m.[39mtoBe([32m'analyzer/config/analysis_config.yaml'[39m)[33m;[39m[0m

      at Object.toBeDefined (tests/configuration/migration-testing.test.js:36:33)

  ‚óè Configuration Migration Testing ‚Ä∫ Legacy Configuration Preservation ‚Ä∫ should have valid conflict resolution strategy

    TypeError: Cannot read properties of undefined (reading 'conflict_resolution')

    [0m [90m 41 |[39m
     [90m 42 |[39m     test([32m'should have valid conflict resolution strategy'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 43 |[39m       [36mconst[39m conflictResolution [33m=[39m enterpriseConfig[33m.[39mlegacy_integration[33m.[39mconflict_resolution[33m;[39m
     [90m    |[39m                                                                      [31m[1m^[22m[39m
     [90m 44 |[39m       expect([[32m'legacy_wins'[39m[33m,[39m [32m'enterprise_wins'[39m[33m,[39m [32m'merge'[39m])[33m.[39mtoContain(conflictResolution)[33m;[39m
     [90m 45 |[39m     })[33m;[39m
     [90m 46 |[39m[0m

      at Object.conflict_resolution (tests/configuration/migration-testing.test.js:43:70)

  ‚óè Configuration Migration Testing ‚Ä∫ Legacy Configuration Preservation ‚Ä∫ should enable migration warnings

    TypeError: Cannot read properties of undefined (reading 'migration_warnings')

    [0m [90m 46 |[39m
     [90m 47 |[39m     test([32m'should enable migration warnings'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 48 |[39m       expect(enterpriseConfig[33m.[39mlegacy_integration[33m.[39mmigration_warnings)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m    |[39m                                                  [31m[1m^[22m[39m
     [90m 49 |[39m     })[33m;[39m
     [90m 50 |[39m   })[33m;[39m
     [90m 51 |[39m[0m

      at Object.migration_warnings (tests/configuration/migration-testing.test.js:48:50)

  ‚óè Configuration Migration Testing ‚Ä∫ Enterprise Configuration Enhancement ‚Ä∫ should enhance legacy configuration with enterprise features

    TypeError: Cannot read properties of undefined (reading 'features')

    [0m [90m 242 |[39m     test([32m'should enhance legacy configuration with enterprise features'[39m[33m,[39m () [33m=>[39m {
     [90m 243 |[39m       [90m// Verify that enterprise features are additive, not replacing legacy config[39m
    [31m[1m>[22m[39m[90m 244 |[39m       expect(enterpriseConfig[33m.[39menterprise[33m.[39mfeatures[33m.[39madvanced_analytics)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 245 |[39m       expect(enterpriseConfig[33m.[39menterprise[33m.[39mfeatures[33m.[39menterprise_security)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 246 |[39m       expect(enterpriseConfig[33m.[39menterprise[33m.[39mfeatures[33m.[39mperformance_monitoring)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 247 |[39m       [0m

      at Object.features (tests/configuration/migration-testing.test.js:244:42)

  ‚óè Configuration Migration Testing ‚Ä∫ Enterprise Configuration Enhancement ‚Ä∫ should provide enterprise-level quality gates

    TypeError: Cannot read properties of undefined (reading 'quality_gates')

    [0m [90m 251 |[39m
     [90m 252 |[39m     test([32m'should provide enterprise-level quality gates'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 253 |[39m       [36mconst[39m enterpriseGates [33m=[39m enterpriseConfig[33m.[39mgovernance[33m.[39mquality_gates[33m;[39m
     [90m     |[39m                                                           [31m[1m^[22m[39m
     [90m 254 |[39m       expect(enterpriseGates[33m.[39menabled)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 255 |[39m       expect(enterpriseGates[33m.[39mnasa_compliance[33m.[39menabled)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 256 |[39m       expect(enterpriseGates[33m.[39mnasa_compliance[33m.[39mminimum_score)[33m.[39mtoBe([35m0.95[39m)[33m;[39m[0m

      at Object.quality_gates (tests/configuration/migration-testing.test.js:253:59)

  ‚óè Configuration Migration Testing ‚Ä∫ Enterprise Configuration Enhancement ‚Ä∫ should enhance performance monitoring capabilities

    TypeError: Cannot read properties of undefined (reading 'metrics')

    [0m [90m 263 |[39m     test([32m'should enhance performance monitoring capabilities'[39m[33m,[39m () [33m=>[39m {
     [90m 264 |[39m       [36mconst[39m monitoring [33m=[39m enterpriseConfig[33m.[39mmonitoring[33m;[39m
    [31m[1m>[22m[39m[90m 265 |[39m       expect(monitoring[33m.[39mmetrics[33m.[39menabled)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                         [31m[1m^[22m[39m
     [90m 266 |[39m       expect(monitoring[33m.[39mlogging[33m.[39menabled)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 267 |[39m       expect(monitoring[33m.[39malerts[33m.[39menabled)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 268 |[39m       [0m

      at Object.metrics (tests/configuration/migration-testing.test.js:265:25)

  ‚óè Configuration Migration Testing ‚Ä∫ Migration Path Validation ‚Ä∫ should provide clear migration indicators

    TypeError: Cannot read properties of undefined (reading 'migration_required')

    [0m [90m 276 |[39m   describe([32m'Migration Path Validation'[39m[33m,[39m () [33m=>[39m {
     [90m 277 |[39m     test([32m'should provide clear migration indicators'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 278 |[39m       expect(enterpriseConfig[33m.[39mschema[33m.[39mmigration_required)[33m.[39mtoBe([36mfalse[39m)[33m;[39m
     [90m     |[39m                                      [31m[1m^[22m[39m
     [90m 279 |[39m       expect(enterpriseConfig[33m.[39mschema[33m.[39mcompatibility_level)[33m.[39mtoBe([32m'backward'[39m)[33m;[39m
     [90m 280 |[39m       expect(enterpriseConfig[33m.[39mlegacy_integration[33m.[39mmigration_warnings)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 281 |[39m     })[33m;[39m[0m

      at Object.migration_required (tests/configuration/migration-testing.test.js:278:38)

  ‚óè Configuration Migration Testing ‚Ä∫ Migration Path Validation ‚Ä∫ should maintain version consistency

    TypeError: Cannot read properties of undefined (reading 'version')

    [0m [90m 282 |[39m
     [90m 283 |[39m     test([32m'should maintain version consistency'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 284 |[39m       [36mconst[39m schemaVersion [33m=[39m enterpriseConfig[33m.[39mschema[33m.[39mversion[33m;[39m
     [90m     |[39m                                                     [31m[1m^[22m[39m
     [90m 285 |[39m       expect(schemaVersion)[33m.[39mtoBe([32m'1.0'[39m)[33m;[39m
     [90m 286 |[39m       
     [90m 287 |[39m       [36mconst[39m formatVersion [33m=[39m enterpriseConfig[33m.[39mschema[33m.[39mformat_version[33m;[39m[0m

      at Object.version (tests/configuration/migration-testing.test.js:284:53)

  ‚óè Configuration Migration Testing ‚Ä∫ Migration Path Validation ‚Ä∫ should validate migration conflict resolution

    TypeError: Cannot read properties of undefined (reading 'conflict_resolution')

    [0m [90m 290 |[39m
     [90m 291 |[39m     test([32m'should validate migration conflict resolution'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 292 |[39m       [36mconst[39m conflictResolution [33m=[39m enterpriseConfig[33m.[39mlegacy_integration[33m.[39mconflict_resolution[33m;[39m
     [90m     |[39m                                                                      [31m[1m^[22m[39m
     [90m 293 |[39m       expect(conflictResolution)[33m.[39mtoBe([32m'enterprise_wins'[39m)[33m;[39m
     [90m 294 |[39m       
     [90m 295 |[39m       [90m// In case of conflicts, enterprise settings should take precedence[39m[0m

      at Object.conflict_resolution (tests/configuration/migration-testing.test.js:292:70)

FAIL tests/configuration/environment-override.test.js
  Environment Variable Override Testing
    Environment Variable Substitution
      √ó should handle GitHub webhook secret substitution (9 ms)
      √ó should handle Slack webhook URL substitution (1 ms)
      √ó should handle Teams webhook URL substitution (36 ms)
      ‚àö should handle SMTP server substitution (2 ms)
      ‚àö should substitute environment variables correctly (1 ms)
      ‚àö should handle nested environment variable substitution (1 ms)
    Environment-Specific Overrides
      √ó should have valid development environment overrides (1 ms)
      √ó should have valid staging environment overrides
      √ó should have valid production environment overrides (1 ms)
      √ó should use dot notation for nested property overrides (1 ms)
      √ó should have consistent environment-specific security policies (1 ms)
    Configuration Precedence Testing
      ‚àö should handle environment variable precedence over defaults (1 ms)
      ‚àö should handle multiple levels of override precedence (1 ms)
    Environment Variable Validation
      ‚àö should validate required environment variables (2 ms)
      ‚àö should validate environment variable formats (1 ms)
      ‚àö should handle sensitive data masking in logs (1 ms)
    Runtime Configuration Override
      √ó should support runtime environment switching (1 ms)
      √ó should validate environment-specific constraints (1 ms)
    Configuration Hot Reloading
      ‚àö should detect configuration file changes (1 ms)
      ‚àö should validate configuration after hot reload (1 ms)

  ‚óè Environment Variable Override Testing ‚Ä∫ Environment Variable Substitution ‚Ä∫ should handle GitHub webhook secret substitution

    TypeError: Cannot read properties of undefined (reading 'external_systems')

    [0m [90m 40 |[39m   describe([32m'Environment Variable Substitution'[39m[33m,[39m () [33m=>[39m {
     [90m 41 |[39m     test([32m'should handle GitHub webhook secret substitution'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 42 |[39m       [36mconst[39m webhookSecretPlaceholder [33m=[39m enterpriseConfig[33m.[39mintegrations[33m.[39mexternal_systems[33m.[39mgithub[33m.[39mwebhook_secret[33m;[39m
     [90m    |[39m                                                                      [31m[1m^[22m[39m
     [90m 43 |[39m       expect(webhookSecretPlaceholder)[33m.[39mtoBe([32m'${GITHUB_WEBHOOK_SECRET}'[39m)[33m;[39m
     [90m 44 |[39m     })[33m;[39m
     [90m 45 |[39m[0m

      at Object.external_systems (tests/configuration/environment-override.test.js:42:70)

  ‚óè Environment Variable Override Testing ‚Ä∫ Environment Variable Substitution ‚Ä∫ should handle Slack webhook URL substitution

    TypeError: Cannot read properties of undefined (reading 'external_systems')

    [0m [90m 45 |[39m
     [90m 46 |[39m     test([32m'should handle Slack webhook URL substitution'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 47 |[39m       [36mconst[39m slackWebhookPlaceholder [33m=[39m enterpriseConfig[33m.[39mintegrations[33m.[39mexternal_systems[33m.[39mslack[33m.[39mwebhook_url[33m;[39m
     [90m    |[39m                                                                     [31m[1m^[22m[39m
     [90m 48 |[39m       expect(slackWebhookPlaceholder)[33m.[39mtoBe([32m'${SLACK_WEBHOOK_URL}'[39m)[33m;[39m
     [90m 49 |[39m     })[33m;[39m
     [90m 50 |[39m[0m

      at Object.external_systems (tests/configuration/environment-override.test.js:47:69)

  ‚óè Environment Variable Override Testing ‚Ä∫ Environment Variable Substitution ‚Ä∫ should handle Teams webhook URL substitution

    TypeError: Cannot read properties of undefined (reading 'external_systems')

    [0m [90m 50 |[39m
     [90m 51 |[39m     test([32m'should handle Teams webhook URL substitution'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 52 |[39m       [36mconst[39m teamsWebhookPlaceholder [33m=[39m enterpriseConfig[33m.[39mintegrations[33m.[39mexternal_systems[33m.[39mteams[33m.[39mwebhook_url[33m;[39m
     [90m    |[39m                                                                     [31m[1m^[22m[39m
     [90m 53 |[39m       expect(teamsWebhookPlaceholder)[33m.[39mtoBe([32m'${TEAMS_WEBHOOK_URL}'[39m)[33m;[39m
     [90m 54 |[39m     })[33m;[39m
     [90m 55 |[39m[0m

      at Object.external_systems (tests/configuration/environment-override.test.js:52:69)

  ‚óè Environment Variable Override Testing ‚Ä∫ Environment-Specific Overrides ‚Ä∫ should have valid development environment overrides

    TypeError: Cannot read properties of undefined (reading 'development')

    [0m [90m  98 |[39m   describe([32m'Environment-Specific Overrides'[39m[33m,[39m () [33m=>[39m {
     [90m  99 |[39m     test([32m'should have valid development environment overrides'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 100 |[39m       [36mconst[39m devConfig [33m=[39m enterpriseConfig[33m.[39menvironments[33m.[39mdevelopment[33m;[39m
     [90m     |[39m                                                       [31m[1m^[22m[39m
     [90m 101 |[39m       expect(devConfig)[33m.[39mtoBeDefined()[33m;[39m
     [90m 102 |[39m       
     [90m 103 |[39m       [90m// Check specific development overrides[39m[0m

      at Object.development (tests/configuration/environment-override.test.js:100:55)

  ‚óè Environment Variable Override Testing ‚Ä∫ Environment-Specific Overrides ‚Ä∫ should have valid staging environment overrides

    TypeError: Cannot read properties of undefined (reading 'staging')

    [0m [90m 109 |[39m
     [90m 110 |[39m     test([32m'should have valid staging environment overrides'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 111 |[39m       [36mconst[39m stagingConfig [33m=[39m enterpriseConfig[33m.[39menvironments[33m.[39mstaging[33m;[39m
     [90m     |[39m                                                           [31m[1m^[22m[39m
     [90m 112 |[39m       expect(stagingConfig)[33m.[39mtoBeDefined()[33m;[39m
     [90m 113 |[39m       
     [90m 114 |[39m       [90m// Check specific staging overrides[39m[0m

      at Object.staging (tests/configuration/environment-override.test.js:111:59)

  ‚óè Environment Variable Override Testing ‚Ä∫ Environment-Specific Overrides ‚Ä∫ should have valid production environment overrides

    TypeError: Cannot read properties of undefined (reading 'production')

    [0m [90m 119 |[39m
     [90m 120 |[39m     test([32m'should have valid production environment overrides'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 121 |[39m       [36mconst[39m prodConfig [33m=[39m enterpriseConfig[33m.[39menvironments[33m.[39mproduction[33m;[39m
     [90m     |[39m                                                        [31m[1m^[22m[39m
     [90m 122 |[39m       expect(prodConfig)[33m.[39mtoBeDefined()[33m;[39m
     [90m 123 |[39m       
     [90m 124 |[39m       [90m// Check specific production overrides[39m[0m

      at Object.production (tests/configuration/environment-override.test.js:121:56)

  ‚óè Environment Variable Override Testing ‚Ä∫ Environment-Specific Overrides ‚Ä∫ should use dot notation for nested property overrides

    TypeError: Cannot convert undefined or null to object
        at Function.entries (<anonymous>)

    [0m [90m 133 |[39m       [36mconst[39m environments [33m=[39m enterpriseConfig[33m.[39menvironments[33m;[39m
     [90m 134 |[39m       
    [31m[1m>[22m[39m[90m 135 |[39m       [33mObject[39m[33m.[39mentries(environments)[33m.[39mforEach(([envName[33m,[39m envConfig]) [33m=>[39m {
     [90m     |[39m              [31m[1m^[22m[39m
     [90m 136 |[39m         [33mObject[39m[33m.[39mkeys(envConfig)[33m.[39mforEach(key [33m=>[39m {
     [90m 137 |[39m           [90m// All override keys should use dot notation[39m
     [90m 138 |[39m           expect(key)[33m.[39mtoMatch([35m/^[a-z_]+(\.[a-z_]+)*$/[39m)[33m;[39m[0m

      at Object.entries (tests/configuration/environment-override.test.js:135:14)

  ‚óè Environment Variable Override Testing ‚Ä∫ Environment-Specific Overrides ‚Ä∫ should have consistent environment-specific security policies

    TypeError: Cannot destructure property 'development' of 'enterpriseConfig.environments' as it is undefined.

    [0m [90m 143 |[39m
     [90m 144 |[39m     test([32m'should have consistent environment-specific security policies'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 145 |[39m       [36mconst[39m { development[33m,[39m staging[33m,[39m production } [33m=[39m enterpriseConfig[33m.[39menvironments[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 146 |[39m       
     [90m 147 |[39m       [90m// Development should be less secure[39m
     [90m 148 |[39m       expect(development[[32m'security.authentication.enabled'[39m])[33m.[39mtoBe([36mfalse[39m)[33m;[39m[0m

      at Object.development (tests/configuration/environment-override.test.js:145:15)

  ‚óè Environment Variable Override Testing ‚Ä∫ Runtime Configuration Override ‚Ä∫ should support runtime environment switching

    TypeError: Cannot read properties of undefined (reading 'development')

    [0m [90m 282 |[39m       [36mconst[39m switchEnvironment [33m=[39m (config[33m,[39m targetEnv) [33m=>[39m {
     [90m 283 |[39m         [36mconst[39m baseConfig [33m=[39m [33mJSON[39m[33m.[39mparse([33mJSON[39m[33m.[39mstringify(config))[33m;[39m
    [31m[1m>[22m[39m[90m 284 |[39m         [36mconst[39m envOverrides [33m=[39m config[33m.[39menvironments[targetEnv] [33m||[39m {}[33m;[39m
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 285 |[39m         
     [90m 286 |[39m         [90m// Apply environment-specific overrides[39m
     [90m 287 |[39m         [33mObject[39m[33m.[39mentries(envOverrides)[33m.[39mforEach(([path[33m,[39m value]) [33m=>[39m {[0m

      at switchEnvironment (tests/configuration/environment-override.test.js:284:49)
      at Object.switchEnvironment (tests/configuration/environment-override.test.js:306:25)

  ‚óè Environment Variable Override Testing ‚Ä∫ Runtime Configuration Override ‚Ä∫ should validate environment-specific constraints

    TypeError: Cannot read properties of undefined (reading 'production')

    [0m [90m 368 |[39m
     [90m 369 |[39m       [90m// Test production validation[39m
    [31m[1m>[22m[39m[90m 370 |[39m       [36mconst[39m prodOverrides [33m=[39m enterpriseConfig[33m.[39menvironments[33m.[39mproduction[33m;[39m
     [90m     |[39m                                                           [31m[1m^[22m[39m
     [90m 371 |[39m       [36mconst[39m mockProdConfig [33m=[39m {
     [90m 372 |[39m         security[33m:[39m { encryption[33m:[39m { at_rest[33m:[39m [36mtrue[39m }[33m,[39m audit[33m:[39m { enabled[33m:[39m [36mtrue[39m } }[33m,[39m
     [90m 373 |[39m         governance[33m:[39m { quality_gates[33m:[39m { enforce_blocking[33m:[39m [36mtrue[39m } }[0m

      at Object.production (tests/configuration/environment-override.test.js:370:59)

FAIL tests/configuration/schema-validation.test.js
  Enterprise Configuration Schema Validation
    Schema Metadata Validation
      √ó should have valid schema metadata (12 ms)
      √ó should have valid version format (1 ms)
    Enterprise Feature Configuration
      √ó should have valid enterprise section
      √ó should have valid feature flags (3 ms)
    Security Configuration Validation
      √ó should have valid authentication settings (1 ms)
      √ó should have valid password policy (1 ms)
      √ó should have valid authorization settings (1 ms)
      √ó should have valid encryption settings
    Performance Configuration Validation
      √ó should have valid scaling configuration
      √ó should have valid resource limits (1 ms)
      √ó should have valid caching configuration (1 ms)
    Multi-tenancy Configuration Validation
      √ó should have valid multi-tenancy settings (1 ms)
      √ó should have valid resource quotas (1 ms)
    Monitoring Configuration Validation
      √ó should have valid metrics configuration (1 ms)
      √ó should have valid logging configuration
      √ó should have valid alert thresholds
    Quality Gates Configuration Validation
      √ó should have valid quality gates settings
      √ó should have valid NASA compliance settings (1 ms)
      √ó should have valid custom gates
    Environment-specific Overrides Validation
      √ó should have valid environment configurations
      √ó should have consistent override paths
    Validation Rules Configuration
      √ó should have valid validation rules
      √ó should have well-formed validation rules
    Integration with Six Sigma Configuration
      ‚àö should have compatible Six Sigma configuration (1 ms)
      ‚àö should have valid DPMO calculation parameters (4 ms)
      ‚àö should have valid RTY thresholds (1 ms)
    Configuration Completeness
      √ó should have all required top-level sections (3 ms)
      ‚àö should have consistent boolean values (2 ms)
    Configuration Security Validation
      ‚àö should not contain hardcoded secrets (1 ms)
      ‚àö should use environment variable placeholders for sensitive values (1 ms)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Schema Metadata Validation ‚Ä∫ should have valid schema metadata

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 34 |[39m   describe([32m'Schema Metadata Validation'[39m[33m,[39m () [33m=>[39m {
     [90m 35 |[39m     test([32m'should have valid schema metadata'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 36 |[39m       expect(enterpriseConfig[33m.[39mschema)[33m.[39mtoBeDefined()[33m;[39m
     [90m    |[39m                                       [31m[1m^[22m[39m
     [90m 37 |[39m       expect(enterpriseConfig[33m.[39mschema[33m.[39mversion)[33m.[39mtoBe([32m'1.0'[39m)[33m;[39m
     [90m 38 |[39m       expect(enterpriseConfig[33m.[39mschema[33m.[39mformat_version)[33m.[39mtoBe([32m'2024.1'[39m)[33m;[39m
     [90m 39 |[39m       expect(enterpriseConfig[33m.[39mschema[33m.[39mcompatibility_level)[33m.[39mtoBe([32m'backward'[39m)[33m;[39m[0m

      at Object.toBeDefined (tests/configuration/schema-validation.test.js:36:39)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Schema Metadata Validation ‚Ä∫ should have valid version format

    TypeError: Cannot read properties of undefined (reading 'version')

    [0m [90m 43 |[39m     test([32m'should have valid version format'[39m[33m,[39m () [33m=>[39m {
     [90m 44 |[39m       [36mconst[39m versionPattern [33m=[39m [35m/^\d+\.\d+$/[39m[33m;[39m
    [31m[1m>[22m[39m[90m 45 |[39m       expect(enterpriseConfig[33m.[39mschema[33m.[39mversion)[33m.[39mtoMatch(versionPattern)[33m;[39m
     [90m    |[39m                                      [31m[1m^[22m[39m
     [90m 46 |[39m       
     [90m 47 |[39m       [36mconst[39m formatVersionPattern [33m=[39m [35m/^\d{4}\.\d+$/[39m[33m;[39m
     [90m 48 |[39m       expect(enterpriseConfig[33m.[39mschema[33m.[39mformat_version)[33m.[39mtoMatch(formatVersionPattern)[33m;[39m[0m

      at Object.version (tests/configuration/schema-validation.test.js:45:38)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Enterprise Feature Configuration ‚Ä∫ should have valid enterprise section

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 52 |[39m   describe([32m'Enterprise Feature Configuration'[39m[33m,[39m () [33m=>[39m {
     [90m 53 |[39m     test([32m'should have valid enterprise section'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 54 |[39m       expect(enterpriseConfig[33m.[39menterprise)[33m.[39mtoBeDefined()[33m;[39m
     [90m    |[39m                                           [31m[1m^[22m[39m
     [90m 55 |[39m       expect([36mtypeof[39m enterpriseConfig[33m.[39menterprise[33m.[39menabled)[33m.[39mtoBe([32m'boolean'[39m)[33m;[39m
     [90m 56 |[39m       expect([[32m'community'[39m[33m,[39m [32m'professional'[39m[33m,[39m [32m'enterprise'[39m])[33m.[39mtoContain(
     [90m 57 |[39m         enterpriseConfig[33m.[39menterprise[33m.[39mlicense_mode[0m

      at Object.toBeDefined (tests/configuration/schema-validation.test.js:54:43)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Enterprise Feature Configuration ‚Ä∫ should have valid feature flags

    TypeError: Cannot read properties of undefined (reading 'features')

    [0m [90m 63 |[39m
     [90m 64 |[39m     test([32m'should have valid feature flags'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 65 |[39m       [36mconst[39m features [33m=[39m enterpriseConfig[33m.[39menterprise[33m.[39mfeatures[33m;[39m
     [90m    |[39m                                                    [31m[1m^[22m[39m
     [90m 66 |[39m       expect(features)[33m.[39mtoBeDefined()[33m;[39m
     [90m 67 |[39m       
     [90m 68 |[39m       [90m// All feature flags should be boolean[39m[0m

      at Object.features (tests/configuration/schema-validation.test.js:65:52)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Security Configuration Validation ‚Ä∫ should have valid authentication settings

    TypeError: Cannot read properties of undefined (reading 'authentication')

    [0m [90m 85 |[39m   describe([32m'Security Configuration Validation'[39m[33m,[39m () [33m=>[39m {
     [90m 86 |[39m     test([32m'should have valid authentication settings'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 87 |[39m       [36mconst[39m auth [33m=[39m enterpriseConfig[33m.[39msecurity[33m.[39mauthentication[33m;[39m
     [90m    |[39m                                              [31m[1m^[22m[39m
     [90m 88 |[39m       expect(auth)[33m.[39mtoBeDefined()[33m;[39m
     [90m 89 |[39m       expect([36mtypeof[39m auth[33m.[39menabled)[33m.[39mtoBe([32m'boolean'[39m)[33m;[39m
     [90m 90 |[39m       expect([[32m'basic'[39m[33m,[39m [32m'oauth2'[39m[33m,[39m [32m'saml'[39m[33m,[39m [32m'ldap'[39m[33m,[39m [32m'multi_factor'[39m])[33m.[39mtoContain(auth[33m.[39mmethod)[33m;[39m[0m

      at Object.authentication (tests/configuration/schema-validation.test.js:87:46)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Security Configuration Validation ‚Ä∫ should have valid password policy

    TypeError: Cannot read properties of undefined (reading 'authentication')

    [0m [90m 94 |[39m
     [90m 95 |[39m     test([32m'should have valid password policy'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 96 |[39m       [36mconst[39m policy [33m=[39m enterpriseConfig[33m.[39msecurity[33m.[39mauthentication[33m.[39mpassword_policy[33m;[39m
     [90m    |[39m                                                [31m[1m^[22m[39m
     [90m 97 |[39m       expect(policy)[33m.[39mtoBeDefined()[33m;[39m
     [90m 98 |[39m       expect([36mtypeof[39m policy[33m.[39mmin_length)[33m.[39mtoBe([32m'number'[39m)[33m;[39m
     [90m 99 |[39m       expect(policy[33m.[39mmin_length)[33m.[39mtoBeGreaterThanOrEqual([35m8[39m)[33m;[39m[0m

      at Object.authentication (tests/configuration/schema-validation.test.js:96:48)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Security Configuration Validation ‚Ä∫ should have valid authorization settings

    TypeError: Cannot read properties of undefined (reading 'authorization')

    [0m [90m 107 |[39m
     [90m 108 |[39m     test([32m'should have valid authorization settings'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 109 |[39m       [36mconst[39m auth [33m=[39m enterpriseConfig[33m.[39msecurity[33m.[39mauthorization[33m;[39m
     [90m     |[39m                                              [31m[1m^[22m[39m
     [90m 110 |[39m       expect(auth)[33m.[39mtoBeDefined()[33m;[39m
     [90m 111 |[39m       expect([36mtypeof[39m auth[33m.[39mrbac_enabled)[33m.[39mtoBe([32m'boolean'[39m)[33m;[39m
     [90m 112 |[39m       expect([36mtypeof[39m auth[33m.[39mdefault_role)[33m.[39mtoBe([32m'string'[39m)[33m;[39m[0m

      at Object.authorization (tests/configuration/schema-validation.test.js:109:46)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Security Configuration Validation ‚Ä∫ should have valid encryption settings

    TypeError: Cannot read properties of undefined (reading 'encryption')

    [0m [90m 121 |[39m
     [90m 122 |[39m     test([32m'should have valid encryption settings'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 123 |[39m       [36mconst[39m encryption [33m=[39m enterpriseConfig[33m.[39msecurity[33m.[39mencryption[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 124 |[39m       expect(encryption)[33m.[39mtoBeDefined()[33m;[39m
     [90m 125 |[39m       expect([36mtypeof[39m encryption[33m.[39mat_rest)[33m.[39mtoBe([32m'boolean'[39m)[33m;[39m
     [90m 126 |[39m       expect([36mtypeof[39m encryption[33m.[39min_transit)[33m.[39mtoBe([32m'boolean'[39m)[33m;[39m[0m

      at Object.encryption (tests/configuration/schema-validation.test.js:123:52)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Performance Configuration Validation ‚Ä∫ should have valid scaling configuration

    TypeError: Cannot read properties of undefined (reading 'scaling')

    [0m [90m 134 |[39m   describe([32m'Performance Configuration Validation'[39m[33m,[39m () [33m=>[39m {
     [90m 135 |[39m     test([32m'should have valid scaling configuration'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 136 |[39m       [36mconst[39m scaling [33m=[39m enterpriseConfig[33m.[39mperformance[33m.[39mscaling[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 137 |[39m       expect(scaling)[33m.[39mtoBeDefined()[33m;[39m
     [90m 138 |[39m       expect([36mtypeof[39m scaling[33m.[39mauto_scaling_enabled)[33m.[39mtoBe([32m'boolean'[39m)[33m;[39m
     [90m 139 |[39m       expect([36mtypeof[39m scaling[33m.[39mmin_workers)[33m.[39mtoBe([32m'number'[39m)[33m;[39m[0m

      at Object.scaling (tests/configuration/schema-validation.test.js:136:52)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Performance Configuration Validation ‚Ä∫ should have valid resource limits

    TypeError: Cannot read properties of undefined (reading 'resource_limits')

    [0m [90m 147 |[39m
     [90m 148 |[39m     test([32m'should have valid resource limits'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 149 |[39m       [36mconst[39m limits [33m=[39m enterpriseConfig[33m.[39mperformance[33m.[39mresource_limits[33m;[39m
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 150 |[39m       expect(limits)[33m.[39mtoBeDefined()[33m;[39m
     [90m 151 |[39m       expect([36mtypeof[39m limits[33m.[39mmax_memory_mb)[33m.[39mtoBe([32m'number'[39m)[33m;[39m
     [90m 152 |[39m       expect(limits[33m.[39mmax_memory_mb)[33m.[39mtoBeGreaterThan([35m0[39m)[33m;[39m[0m

      at Object.resource_limits (tests/configuration/schema-validation.test.js:149:51)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Performance Configuration Validation ‚Ä∫ should have valid caching configuration

    TypeError: Cannot read properties of undefined (reading 'caching')

    [0m [90m 158 |[39m
     [90m 159 |[39m     test([32m'should have valid caching configuration'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 160 |[39m       [36mconst[39m caching [33m=[39m enterpriseConfig[33m.[39mperformance[33m.[39mcaching[33m;[39m
     [90m     |[39m                                                    [31m[1m^[22m[39m
     [90m 161 |[39m       expect(caching)[33m.[39mtoBeDefined()[33m;[39m
     [90m 162 |[39m       expect([36mtypeof[39m caching[33m.[39menabled)[33m.[39mtoBe([32m'boolean'[39m)[33m;[39m
     [90m 163 |[39m       expect([[32m'memory'[39m[33m,[39m [32m'redis'[39m[33m,[39m [32m'memcached'[39m])[33m.[39mtoContain(caching[33m.[39mprovider)[33m;[39m[0m

      at Object.caching (tests/configuration/schema-validation.test.js:160:52)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Multi-tenancy Configuration Validation ‚Ä∫ should have valid multi-tenancy settings

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 170 |[39m     test([32m'should have valid multi-tenancy settings'[39m[33m,[39m () [33m=>[39m {
     [90m 171 |[39m       [36mconst[39m multiTenancy [33m=[39m enterpriseConfig[33m.[39mmulti_tenancy[33m;[39m
    [31m[1m>[22m[39m[90m 172 |[39m       expect(multiTenancy)[33m.[39mtoBeDefined()[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 173 |[39m       expect([36mtypeof[39m multiTenancy[33m.[39menabled)[33m.[39mtoBe([32m'boolean'[39m)[33m;[39m
     [90m 174 |[39m       expect([[32m'basic'[39m[33m,[39m [32m'enhanced'[39m[33m,[39m [32m'complete'[39m])[33m.[39mtoContain(multiTenancy[33m.[39misolation_level)[33m;[39m
     [90m 175 |[39m       expect([36mtypeof[39m multiTenancy[33m.[39mtenant_specific_config)[33m.[39mtoBe([32m'boolean'[39m)[33m;[39m[0m

      at Object.toBeDefined (tests/configuration/schema-validation.test.js:172:28)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Multi-tenancy Configuration Validation ‚Ä∫ should have valid resource quotas

    TypeError: Cannot read properties of undefined (reading 'resource_quotas')

    [0m [90m 177 |[39m
     [90m 178 |[39m     test([32m'should have valid resource quotas'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 179 |[39m       [36mconst[39m quotas [33m=[39m enterpriseConfig[33m.[39mmulti_tenancy[33m.[39mresource_quotas[33m;[39m
     [90m     |[39m                                                     [31m[1m^[22m[39m
     [90m 180 |[39m       expect(quotas)[33m.[39mtoBeDefined()[33m;[39m
     [90m 181 |[39m       expect([36mtypeof[39m quotas[33m.[39mmax_users_per_tenant)[33m.[39mtoBe([32m'number'[39m)[33m;[39m
     [90m 182 |[39m       expect(quotas[33m.[39mmax_users_per_tenant)[33m.[39mtoBeGreaterThan([35m0[39m)[33m;[39m[0m

      at Object.resource_quotas (tests/configuration/schema-validation.test.js:179:53)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Monitoring Configuration Validation ‚Ä∫ should have valid metrics configuration

    TypeError: Cannot read properties of undefined (reading 'metrics')

    [0m [90m 188 |[39m   describe([32m'Monitoring Configuration Validation'[39m[33m,[39m () [33m=>[39m {
     [90m 189 |[39m     test([32m'should have valid metrics configuration'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 190 |[39m       [36mconst[39m metrics [33m=[39m enterpriseConfig[33m.[39mmonitoring[33m.[39mmetrics[33m;[39m
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 191 |[39m       expect(metrics)[33m.[39mtoBeDefined()[33m;[39m
     [90m 192 |[39m       expect([36mtypeof[39m metrics[33m.[39menabled)[33m.[39mtoBe([32m'boolean'[39m)[33m;[39m
     [90m 193 |[39m       expect([[32m'prometheus'[39m[33m,[39m [32m'datadog'[39m[33m,[39m [32m'new_relic'[39m])[33m.[39mtoContain(metrics[33m.[39mprovider)[33m;[39m[0m

      at Object.metrics (tests/configuration/schema-validation.test.js:190:51)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Monitoring Configuration Validation ‚Ä∫ should have valid logging configuration

    TypeError: Cannot read properties of undefined (reading 'logging')

    [0m [90m 197 |[39m
     [90m 198 |[39m     test([32m'should have valid logging configuration'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 199 |[39m       [36mconst[39m logging [33m=[39m enterpriseConfig[33m.[39mmonitoring[33m.[39mlogging[33m;[39m
     [90m     |[39m                                                   [31m[1m^[22m[39m
     [90m 200 |[39m       expect(logging)[33m.[39mtoBeDefined()[33m;[39m
     [90m 201 |[39m       expect([36mtypeof[39m logging[33m.[39menabled)[33m.[39mtoBe([32m'boolean'[39m)[33m;[39m
     [90m 202 |[39m       expect([[32m'debug'[39m[33m,[39m [32m'info'[39m[33m,[39m [32m'warn'[39m[33m,[39m [32m'error'[39m])[33m.[39mtoContain(logging[33m.[39mlevel)[33m;[39m[0m

      at Object.logging (tests/configuration/schema-validation.test.js:199:51)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Monitoring Configuration Validation ‚Ä∫ should have valid alert thresholds

    TypeError: Cannot read properties of undefined (reading 'alerts')

    [0m [90m 206 |[39m
     [90m 207 |[39m     test([32m'should have valid alert thresholds'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 208 |[39m       [36mconst[39m thresholds [33m=[39m enterpriseConfig[33m.[39mmonitoring[33m.[39malerts[33m.[39mthresholds[33m;[39m
     [90m     |[39m                                                      [31m[1m^[22m[39m
     [90m 209 |[39m       expect(thresholds)[33m.[39mtoBeDefined()[33m;[39m
     [90m 210 |[39m       expect([36mtypeof[39m thresholds[33m.[39merror_rate)[33m.[39mtoBe([32m'number'[39m)[33m;[39m
     [90m 211 |[39m       expect(thresholds[33m.[39merror_rate)[33m.[39mtoBeGreaterThan([35m0[39m)[33m;[39m[0m

      at Object.alerts (tests/configuration/schema-validation.test.js:208:54)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Quality Gates Configuration Validation ‚Ä∫ should have valid quality gates settings

    TypeError: Cannot read properties of undefined (reading 'quality_gates')

    [0m [90m 218 |[39m   describe([32m'Quality Gates Configuration Validation'[39m[33m,[39m () [33m=>[39m {
     [90m 219 |[39m     test([32m'should have valid quality gates settings'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 220 |[39m       [36mconst[39m qualityGates [33m=[39m enterpriseConfig[33m.[39mgovernance[33m.[39mquality_gates[33m;[39m
     [90m     |[39m                                                        [31m[1m^[22m[39m
     [90m 221 |[39m       expect(qualityGates)[33m.[39mtoBeDefined()[33m;[39m
     [90m 222 |[39m       expect([36mtypeof[39m qualityGates[33m.[39menabled)[33m.[39mtoBe([32m'boolean'[39m)[33m;[39m
     [90m 223 |[39m       expect([36mtypeof[39m qualityGates[33m.[39menforce_blocking)[33m.[39mtoBe([32m'boolean'[39m)[33m;[39m[0m

      at Object.quality_gates (tests/configuration/schema-validation.test.js:220:56)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Quality Gates Configuration Validation ‚Ä∫ should have valid NASA compliance settings

    TypeError: Cannot read properties of undefined (reading 'quality_gates')

    [0m [90m 226 |[39m
     [90m 227 |[39m     test([32m'should have valid NASA compliance settings'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 228 |[39m       [36mconst[39m nasa [33m=[39m enterpriseConfig[33m.[39mgovernance[33m.[39mquality_gates[33m.[39mnasa_compliance[33m;[39m
     [90m     |[39m                                                [31m[1m^[22m[39m
     [90m 229 |[39m       expect(nasa)[33m.[39mtoBeDefined()[33m;[39m
     [90m 230 |[39m       expect([36mtypeof[39m nasa[33m.[39menabled)[33m.[39mtoBe([32m'boolean'[39m)[33m;[39m
     [90m 231 |[39m       expect([36mtypeof[39m nasa[33m.[39mminimum_score)[33m.[39mtoBe([32m'number'[39m)[33m;[39m[0m

      at Object.quality_gates (tests/configuration/schema-validation.test.js:228:48)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Quality Gates Configuration Validation ‚Ä∫ should have valid custom gates

    TypeError: Cannot read properties of undefined (reading 'quality_gates')

    [0m [90m 237 |[39m
     [90m 238 |[39m     test([32m'should have valid custom gates'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 239 |[39m       [36mconst[39m customGates [33m=[39m enterpriseConfig[33m.[39mgovernance[33m.[39mquality_gates[33m.[39mcustom_gates[33m;[39m
     [90m     |[39m                                                       [31m[1m^[22m[39m
     [90m 240 |[39m       expect(customGates)[33m.[39mtoBeDefined()[33m;[39m
     [90m 241 |[39m       expect([36mtypeof[39m customGates[33m.[39mcode_coverage)[33m.[39mtoBe([32m'number'[39m)[33m;[39m
     [90m 242 |[39m       expect(customGates[33m.[39mcode_coverage)[33m.[39mtoBeGreaterThan([35m0[39m)[33m;[39m[0m

      at Object.quality_gates (tests/configuration/schema-validation.test.js:239:55)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Environment-specific Overrides Validation ‚Ä∫ should have valid environment configurations

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 251 |[39m     test([32m'should have valid environment configurations'[39m[33m,[39m () [33m=>[39m {
     [90m 252 |[39m       [36mconst[39m environments [33m=[39m enterpriseConfig[33m.[39menvironments[33m;[39m
    [31m[1m>[22m[39m[90m 253 |[39m       expect(environments)[33m.[39mtoBeDefined()[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 254 |[39m       
     [90m 255 |[39m       [36mconst[39m requiredEnvs [33m=[39m [[32m'development'[39m[33m,[39m [32m'staging'[39m[33m,[39m [32m'production'[39m][33m;[39m
     [90m 256 |[39m       requiredEnvs[33m.[39mforEach(env [33m=>[39m {[0m

      at Object.toBeDefined (tests/configuration/schema-validation.test.js:253:28)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Environment-specific Overrides Validation ‚Ä∫ should have consistent override paths

    TypeError: Cannot convert undefined or null to object
        at Function.entries (<anonymous>)

    [0m [90m 263 |[39m       [36mconst[39m environments [33m=[39m enterpriseConfig[33m.[39menvironments[33m;[39m
     [90m 264 |[39m       
    [31m[1m>[22m[39m[90m 265 |[39m       [33mObject[39m[33m.[39mentries(environments)[33m.[39mforEach(([envName[33m,[39m envConfig]) [33m=>[39m {
     [90m     |[39m              [31m[1m^[22m[39m
     [90m 266 |[39m         [33mObject[39m[33m.[39mkeys(envConfig)[33m.[39mforEach(key [33m=>[39m {
     [90m 267 |[39m           [90m// Override keys should use dot notation for nested properties[39m
     [90m 268 |[39m           expect(key)[33m.[39mtoMatch([35m/^[a-z_]+(\.[a-z_]+)*$/[39m)[33m;[39m[0m

      at Object.entries (tests/configuration/schema-validation.test.js:265:14)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Validation Rules Configuration ‚Ä∫ should have valid validation rules

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 275 |[39m     test([32m'should have valid validation rules'[39m[33m,[39m () [33m=>[39m {
     [90m 276 |[39m       [36mconst[39m validation [33m=[39m enterpriseConfig[33m.[39mvalidation[33m;[39m
    [31m[1m>[22m[39m[90m 277 |[39m       expect(validation)[33m.[39mtoBeDefined()[33m;[39m
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 278 |[39m       expect([36mtypeof[39m validation[33m.[39mschema_validation)[33m.[39mtoBe([32m'boolean'[39m)[33m;[39m
     [90m 279 |[39m       expect([36mtypeof[39m validation[33m.[39mruntime_validation)[33m.[39mtoBe([32m'boolean'[39m)[33m;[39m
     [90m 280 |[39m       expect([36mtypeof[39m validation[33m.[39mconfiguration_drift_detection)[33m.[39mtoBe([32m'boolean'[39m)[33m;[39m[0m

      at Object.toBeDefined (tests/configuration/schema-validation.test.js:277:26)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Validation Rules Configuration ‚Ä∫ should have well-formed validation rules

    TypeError: Cannot read properties of undefined (reading 'rules')

    [0m [90m 282 |[39m
     [90m 283 |[39m     test([32m'should have well-formed validation rules'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 284 |[39m       [36mconst[39m rules [33m=[39m enterpriseConfig[33m.[39mvalidation[33m.[39mrules[33m;[39m
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 285 |[39m       expect([33mArray[39m[33m.[39misArray(rules))[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 286 |[39m       
     [90m 287 |[39m       rules[33m.[39mforEach(rule [33m=>[39m {[0m

      at Object.rules (tests/configuration/schema-validation.test.js:284:49)

  ‚óè Enterprise Configuration Schema Validation ‚Ä∫ Configuration Completeness ‚Ä∫ should have all required top-level sections

    expect(received).toHaveProperty(path)

    Expected path: "schema"
    Received path: []

    Received value: {"advanced": {"async_processing": true, "batch_size": 100, "cache_directory": ".claude/.cache/supply_chain", "cache_ttl_hours": 24, "debug_mode": false, "enable_caching": true, "feature_flags": {"ai_powered_risk_assessment": false, "beta_vulnerability_sources": false, "enhanced_license_detection": true, "experimental_features": false}, "log_level": "INFO", "rate_limiting": {"burst_limit": 10, "requests_per_minute": 60}, "verbose_logging": false}, "compliance": {"audit_trail": true, "export_format": "json", "frameworks": ["SLSA Level 3", "SPDX 2.3", "CycloneDX 1.4", "NIST SSDF", "ISO/IEC 27001", "SOC 2 Type II"], "retention_days": 2555}, "integration": {"non_breaking": true, "performance_monitoring": {"alert_threshold": 2, "baseline_duration": 10, "enabled": true}, "priority": "normal", "quality_gates": {"enabled": true, "fail_on_critical_vulnerabilities": true, "fail_on_prohibited_licenses": true, "fail_on_signing_failures": true, "max_critical_vulnerabilities": 0, "max_high_vulnerabilities": 5}}, "notifications": {"alert_on": ["critical_vulnerabilities", "prohibited_licenses", "signing_failures", "compliance_failures", "performance_degradation"], "channels": {"email": {"enabled": false, "recipients": ["security-team@company.com"], "smtp_server": "${SMTP_SERVER}"}, "slack": {"channel": "#security-alerts", "enabled": false, "webhook_url": "${SLACK_WEBHOOK_URL}"}}, "enabled": true}, "supply_chain": {"cryptographic_signing": {"allowed_algorithms": ["RSA-SHA256", "ECDSA-SHA256"], "ca_cert_path": "${CA_CERT_PATH}", "check_revocation": false, "cosign_binary": "cosign", "enabled": true, "intermediate_cert_path": "${INTERMEDIATE_CERT_PATH}", "min_key_size": 2048, "oidc_client_id": "${OIDC_CLIENT_ID}", "oidc_issuer": "${OIDC_ISSUER}", "require_cert_chain": true, "require_timestamp": true, "signing_cert_path": "${SIGNING_CERT_PATH}", "signing_key_password": "${SIGNING_KEY_PASSWORD}", "signing_key_path": "${SIGNING_KEY_PATH}", "signing_method": "cosign"}, "enable_parallel_processing": true, "enabled": true, "evidence_packaging": {"compression_level": 6, "contact_email": "security@company.com", "enabled": true, "include_build_logs": false, "include_compliance": true, "include_provenance": true, "include_sbom": true, "include_signatures": true, "include_source_code": false, "include_vulnerabilities": true, "max_file_size_mb": 100, "package_format": "zip", "reviewer": "Security Team"}, "license_compliance": {"allowed_licenses": ["MIT", "Apache-2.0", "BSD-3-Clause", "BSD-2-Clause", "ISC"], "enabled": true, "prohibited_licenses": ["SSPL-1.0", "Commons-Clause", "Elastic-2.0", "BUSL-1.1"], "restricted_licenses": ["GPL-3.0", "AGPL-3.0", "LGPL-3.0", "CDDL-1.0", "MPL-2.0"]}, "max_workers": 4, "output_dir": ".claude/.artifacts/supply_chain", "performance_overhead_target": 1.8, "sbom": {"formats": ["CycloneDX-1.4", "SPDX-2.3"], "include_dev_dependencies": true, "include_system_components": true, "tool_name": "SPEK-Supply-Chain-Analyzer", "tool_version": "1.0.0"}, "slsa": {"build_type": "https://spek.dev/build-types/generic@v1", "builder_id": "https://spek.dev/builder/v1", "builder_version": "1.0.0", "fulcio_url": "https://fulcio.sigstore.dev", "level": 3, "rekor_url": "https://rekor.sigstore.dev", "reproducible_builds": false}, "timeout_seconds": 300, "vulnerability_scanning": {"databases": ["OSV", "GitHub"], "enabled": true, "github_api_key": "${GITHUB_API_KEY}", "nvd_api_key": "${NVD_API_KEY}", "osv_api_url": "https://api.osv.dev/v1", "severity_thresholds": {"critical": 9, "high": 7, "low": 0.1, "medium": 4}}}}

    [0m [90m 336 |[39m       
     [90m 337 |[39m       requiredSections[33m.[39mforEach(section [33m=>[39m {
    [31m[1m>[22m[39m[90m 338 |[39m         expect(enterpriseConfig)[33m.[39mtoHaveProperty(section)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 339 |[39m         expect(enterpriseConfig[section])[33m.[39mnot[33m.[39mtoBeNull()[33m;[39m
     [90m 340 |[39m         expect(enterpriseConfig[section])[33m.[39mnot[33m.[39mtoBeUndefined()[33m;[39m
     [90m 341 |[39m       })[33m;[39m[0m

      at toHaveProperty (tests/configuration/schema-validation.test.js:338:34)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/configuration/schema-validation.test.js:337:24)

FAIL tests/configuration/sixsigma-integration.test.js
  Six Sigma Integration Testing
    Configuration Integration Validation
      √ó should have compatible quality gate configurations (8 ms)
      √ó should align enterprise features with Six Sigma requirements
      √ó should have consistent artifact generation settings
    Six Sigma Quality Gate Integration
      √ó should integrate enterprise NASA compliance with Six Sigma levels
      √ó should map enterprise custom gates to Six Sigma defect categories
      √ó should validate DPMO calculation alignment with enterprise metrics
    Process Stage Integration
      √ó should align enterprise governance with Six Sigma process stages (15 ms)
      √ó should calculate RTY based on enterprise configuration (1 ms)
    Theater Detection Integration
      √ó should align enterprise monitoring with theater detection (1 ms)
      √ó should prevent vanity metric gaming
    Continuous Improvement Integration
      √ó should align enterprise analytics with Six Sigma improvement triggers
      √ó should integrate with enterprise notification system
    Data Collection and Reporting Integration
      √ó should integrate enterprise data retention with Six Sigma telemetry
      √ó should align enterprise reporting with Six Sigma artifacts
    Security and Compliance Integration
      √ó should ensure Six Sigma data security aligns with enterprise security
      √ó should align audit requirements with Six Sigma compliance (1 ms)
    Performance Integration
      √ó should ensure Six Sigma calculations do not impact enterprise performance
    Integration Validation Tests
      √ó should validate combined configuration consistency
      √ó should validate end-to-end quality pipeline

  ‚óè Six Sigma Integration Testing ‚Ä∫ Configuration Integration Validation ‚Ä∫ should have compatible quality gate configurations

    TypeError: Cannot read properties of undefined (reading 'quality_gates')

    [0m [90m 35 |[39m     test([32m'should have compatible quality gate configurations'[39m[33m,[39m () [33m=>[39m {
     [90m 36 |[39m       [90m// Enterprise config should have quality gates enabled[39m
    [31m[1m>[22m[39m[90m 37 |[39m       expect(enterpriseConfig[33m.[39mgovernance[33m.[39mquality_gates[33m.[39menabled)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m    |[39m                                          [31m[1m^[22m[39m
     [90m 38 |[39m       
     [90m 39 |[39m       [90m// Six Sigma config should be enabled in checks.yaml[39m
     [90m 40 |[39m       expect(sixSigmaConfig[33m.[39menabled)[33m.[39mtoBe([36mtrue[39m)[33m;[39m[0m

      at Object.quality_gates (tests/configuration/sixsigma-integration.test.js:37:42)

  ‚óè Six Sigma Integration Testing ‚Ä∫ Configuration Integration Validation ‚Ä∫ should align enterprise features with Six Sigma requirements

    TypeError: Cannot read properties of undefined (reading 'features')

    [0m [90m 49 |[39m     test([32m'should align enterprise features with Six Sigma requirements'[39m[33m,[39m () [33m=>[39m {
     [90m 50 |[39m       [90m// Advanced analytics should be enabled for Six Sigma metrics[39m
    [31m[1m>[22m[39m[90m 51 |[39m       expect(enterpriseConfig[33m.[39menterprise[33m.[39mfeatures[33m.[39madvanced_analytics)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m    |[39m                                          [31m[1m^[22m[39m
     [90m 52 |[39m       expect(enterpriseConfig[33m.[39menterprise[33m.[39mfeatures[33m.[39mperformance_monitoring)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 53 |[39m       expect(enterpriseConfig[33m.[39menterprise[33m.[39mfeatures[33m.[39mcompliance_reporting)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 54 |[39m       [0m

      at Object.features (tests/configuration/sixsigma-integration.test.js:51:42)

  ‚óè Six Sigma Integration Testing ‚Ä∫ Configuration Integration Validation ‚Ä∫ should have consistent artifact generation settings

    TypeError: Cannot read properties of undefined (reading 'enabled')

    [0m [90m 61 |[39m       [90m// Enterprise config should support Six Sigma artifacts[39m
     [90m 62 |[39m       [36mconst[39m enterpriseAnalytics [33m=[39m enterpriseConfig[33m.[39manalytics[33m;[39m
    [31m[1m>[22m[39m[90m 63 |[39m       expect(enterpriseAnalytics[33m.[39menabled)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m    |[39m                                  [31m[1m^[22m[39m
     [90m 64 |[39m       expect(enterpriseAnalytics[33m.[39mcustom_dashboards)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 65 |[39m       expect(enterpriseAnalytics[33m.[39mscheduled_reports)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 66 |[39m       [0m

      at Object.enabled (tests/configuration/sixsigma-integration.test.js:63:34)

  ‚óè Six Sigma Integration Testing ‚Ä∫ Six Sigma Quality Gate Integration ‚Ä∫ should integrate enterprise NASA compliance with Six Sigma levels

    TypeError: Cannot read properties of undefined (reading 'quality_gates')

    [0m [90m 76 |[39m   describe([32m'Six Sigma Quality Gate Integration'[39m[33m,[39m () [33m=>[39m {
     [90m 77 |[39m     test([32m'should integrate enterprise NASA compliance with Six Sigma levels'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 78 |[39m       [36mconst[39m enterpriseNASA [33m=[39m enterpriseConfig[33m.[39mgovernance[33m.[39mquality_gates[33m.[39mnasa_compliance[33m;[39m
     [90m    |[39m                                                          [31m[1m^[22m[39m
     [90m 79 |[39m       [36mconst[39m sixSigmaLevels [33m=[39m sixSigmaConfig[33m;[39m
     [90m 80 |[39m       
     [90m 81 |[39m       [90m// NASA compliance minimum score should align with sigma levels[39m[0m

      at Object.quality_gates (tests/configuration/sixsigma-integration.test.js:78:58)

  ‚óè Six Sigma Integration Testing ‚Ä∫ Six Sigma Quality Gate Integration ‚Ä∫ should map enterprise custom gates to Six Sigma defect categories

    TypeError: Cannot read properties of undefined (reading 'quality_gates')

    [0m [90m 90 |[39m
     [90m 91 |[39m     test([32m'should map enterprise custom gates to Six Sigma defect categories'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 92 |[39m       [36mconst[39m customGates [33m=[39m enterpriseConfig[33m.[39mgovernance[33m.[39mquality_gates[33m.[39mcustom_gates[33m;[39m
     [90m    |[39m                                                       [31m[1m^[22m[39m
     [90m 93 |[39m       [36mconst[39m defectCategories [33m=[39m sixSigmaConfig[33m.[39mdefect_categories[33m;[39m
     [90m 94 |[39m       
     [90m 95 |[39m       [90m// Code coverage should map to defect detection[39m[0m

      at Object.quality_gates (tests/configuration/sixsigma-integration.test.js:92:55)

  ‚óè Six Sigma Integration Testing ‚Ä∫ Six Sigma Quality Gate Integration ‚Ä∫ should validate DPMO calculation alignment with enterprise metrics

    TypeError: Cannot read properties of undefined (reading 'metrics')

    [0m [90m 108 |[39m     test([32m'should validate DPMO calculation alignment with enterprise metrics'[39m[33m,[39m () [33m=>[39m {
     [90m 109 |[39m       [36mconst[39m dpmoCalc [33m=[39m sixSigmaConfig[33m.[39mdpmo_calculation[33m;[39m
    [31m[1m>[22m[39m[90m 110 |[39m       [36mconst[39m enterpriseMetrics [33m=[39m enterpriseConfig[33m.[39mmonitoring[33m.[39mmetrics[33m;[39m
     [90m     |[39m                                                             [31m[1m^[22m[39m
     [90m 111 |[39m       
     [90m 112 |[39m       expect(enterpriseMetrics[33m.[39menabled)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 113 |[39m       expect(enterpriseMetrics[33m.[39mcustom_metrics)[33m.[39mtoBe([36mtrue[39m)[33m;[39m[0m

      at Object.metrics (tests/configuration/sixsigma-integration.test.js:110:61)

  ‚óè Six Sigma Integration Testing ‚Ä∫ Process Stage Integration ‚Ä∫ should align enterprise governance with Six Sigma process stages

    TypeError: Cannot read properties of undefined (reading 'policies')

    [0m [90m 140 |[39m       
     [90m 141 |[39m       [90m// Enterprise governance should enforce these stages[39m
    [31m[1m>[22m[39m[90m 142 |[39m       expect(enterpriseGovernance[33m.[39mpolicies[33m.[39mcode_standards)[33m.[39mtoBe([32m'enterprise'[39m)[33m;[39m
     [90m     |[39m                                   [31m[1m^[22m[39m
     [90m 143 |[39m       expect(enterpriseGovernance[33m.[39mpolicies[33m.[39mreview_requirements[33m.[39mmin_approvers)[33m.[39mtoBeGreaterThanOrEqual([35m2[39m)[33m;[39m
     [90m 144 |[39m     })[33m;[39m
     [90m 145 |[39m[0m

      at Object.policies (tests/configuration/sixsigma-integration.test.js:142:35)

  ‚óè Six Sigma Integration Testing ‚Ä∫ Process Stage Integration ‚Ä∫ should calculate RTY based on enterprise configuration

    TypeError: Cannot read properties of undefined (reading 'quality_gates')

    [0m [90m 146 |[39m     test([32m'should calculate RTY based on enterprise configuration'[39m[33m,[39m () [33m=>[39m {
     [90m 147 |[39m       [36mconst[39m rtyThresholds [33m=[39m sixSigmaConfig[33m.[39mrty_thresholds[33m;[39m
    [31m[1m>[22m[39m[90m 148 |[39m       [36mconst[39m enterpriseQuality [33m=[39m enterpriseConfig[33m.[39mgovernance[33m.[39mquality_gates[33m;[39m
     [90m     |[39m                                                             [31m[1m^[22m[39m
     [90m 149 |[39m       
     [90m 150 |[39m       [90m// RTY thresholds should support enterprise quality requirements[39m
     [90m 151 |[39m       expect(rtyThresholds[33m.[39mexcellent)[33m.[39mtoBe([35m0.95[39m)[33m;[39m[0m

      at Object.quality_gates (tests/configuration/sixsigma-integration.test.js:148:61)

  ‚óè Six Sigma Integration Testing ‚Ä∫ Theater Detection Integration ‚Ä∫ should align enterprise monitoring with theater detection

    TypeError: Cannot read properties of undefined (reading 'metrics')

    [0m [90m 180 |[39m       
     [90m 181 |[39m       [90m// Enterprise monitoring should support these metrics[39m
    [31m[1m>[22m[39m[90m 182 |[39m       expect(enterpriseMonitoring[33m.[39mmetrics[33m.[39menabled)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                   [31m[1m^[22m[39m
     [90m 183 |[39m       expect(enterpriseMonitoring[33m.[39malerts[33m.[39menabled)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 184 |[39m       
     [90m 185 |[39m       [90m// Alert thresholds should detect theater[39m[0m

      at Object.metrics (tests/configuration/sixsigma-integration.test.js:182:35)

  ‚óè Six Sigma Integration Testing ‚Ä∫ Theater Detection Integration ‚Ä∫ should prevent vanity metric gaming

    TypeError: Cannot read properties of undefined (reading 'features')

    [0m [90m 190 |[39m     test([32m'should prevent vanity metric gaming'[39m[33m,[39m () [33m=>[39m {
     [90m 191 |[39m       [36mconst[39m vanityMetrics [33m=[39m sixSigmaConfig[33m.[39mtheater_detection[33m.[39mvanity_metrics[33m;[39m
    [31m[1m>[22m[39m[90m 192 |[39m       [36mconst[39m enterpriseFeatures [33m=[39m enterpriseConfig[33m.[39menterprise[33m.[39mfeatures[33m;[39m
     [90m     |[39m                                                              [31m[1m^[22m[39m
     [90m 193 |[39m       
     [90m 194 |[39m       [90m// Vanity metrics should be identified[39m
     [90m 195 |[39m       expect(vanityMetrics)[33m.[39mtoContain([32m'lines_of_code'[39m)[33m;[39m[0m

      at Object.features (tests/configuration/sixsigma-integration.test.js:192:62)

  ‚óè Six Sigma Integration Testing ‚Ä∫ Continuous Improvement Integration ‚Ä∫ should align enterprise analytics with Six Sigma improvement triggers

    TypeError: Cannot read properties of undefined (reading 'trend_analysis')

    [0m [90m 210 |[39m       
     [90m 211 |[39m       [90m// Enterprise analytics should support trend analysis[39m
    [31m[1m>[22m[39m[90m 212 |[39m       expect(enterpriseAnalytics[33m.[39mtrend_analysis)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 213 |[39m       expect(enterpriseAnalytics[33m.[39mpredictive_insights)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 214 |[39m       expect(enterpriseAnalytics[33m.[39mmachine_learning[33m.[39manomaly_detection)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 215 |[39m       [0m

      at Object.trend_analysis (tests/configuration/sixsigma-integration.test.js:212:34)

  ‚óè Six Sigma Integration Testing ‚Ä∫ Continuous Improvement Integration ‚Ä∫ should integrate with enterprise notification system

    TypeError: Cannot read properties of undefined (reading 'enabled')

    [0m [90m 226 |[39m       [90m// Enterprise notifications should be enabled[39m
     [90m 227 |[39m       expect(enterpriseNotifications[33m.[39menabled)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 228 |[39m       expect(enterpriseNotifications[33m.[39mescalation[33m.[39menabled)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                                 [31m[1m^[22m[39m
     [90m 229 |[39m       
     [90m 230 |[39m       [90m// Six Sigma alerts should have proper thresholds[39m
     [90m 231 |[39m       expect(sixSigmaAlerts[33m.[39mdpmo[33m.[39malerts)[33m.[39mtoBeDefined()[33m;[39m[0m

      at Object.enabled (tests/configuration/sixsigma-integration.test.js:228:49)

  ‚óè Six Sigma Integration Testing ‚Ä∫ Data Collection and Reporting Integration ‚Ä∫ should integrate enterprise data retention with Six Sigma telemetry

    TypeError: Cannot read properties of undefined (reading 'data_retention_days')

    [0m [90m 246 |[39m       
     [90m 247 |[39m       [90m// Data retention should be compatible[39m
    [31m[1m>[22m[39m[90m 248 |[39m       expect(enterpriseAnalytics[33m.[39mdata_retention_days)[33m.[39mtoBe([35m730[39m)[33m;[39m
     [90m     |[39m                                  [31m[1m^[22m[39m
     [90m 249 |[39m       expect(sixSigmaTelemetry[33m.[39mretention_days)[33m.[39mtoBe([35m90[39m)[33m;[39m
     [90m 250 |[39m       
     [90m 251 |[39m       [90m// Enterprise should retain longer for trend analysis[39m[0m

      at Object.data_retention_days (tests/configuration/sixsigma-integration.test.js:248:34)

  ‚óè Six Sigma Integration Testing ‚Ä∫ Data Collection and Reporting Integration ‚Ä∫ should align enterprise reporting with Six Sigma artifacts

    TypeError: Cannot read properties of undefined (reading 'export_formats')

    [0m [90m 261 |[39m       
     [90m 262 |[39m       [90m// Enterprise should support Six Sigma export formats[39m
    [31m[1m>[22m[39m[90m 263 |[39m       [36mconst[39m enterpriseFormats [33m=[39m enterpriseAnalytics[33m.[39mexport_formats[33m;[39m
     [90m     |[39m                                                     [31m[1m^[22m[39m
     [90m 264 |[39m       [36mconst[39m sixSigmaFormats [33m=[39m sixSigmaArtifacts[33m.[39mformats[33m;[39m
     [90m 265 |[39m       
     [90m 266 |[39m       expect(enterpriseFormats)[33m.[39mtoContain([32m'json'[39m)[33m;[39m[0m

      at Object.export_formats (tests/configuration/sixsigma-integration.test.js:263:53)

  ‚óè Six Sigma Integration Testing ‚Ä∫ Security and Compliance Integration ‚Ä∫ should ensure Six Sigma data security aligns with enterprise security

    TypeError: Cannot read properties of undefined (reading 'encryption')

    [0m [90m 282 |[39m       
     [90m 283 |[39m       [90m// Enterprise security should protect Six Sigma data[39m
    [31m[1m>[22m[39m[90m 284 |[39m       expect(enterpriseSecurity[33m.[39mencryption[33m.[39mat_rest)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                                 [31m[1m^[22m[39m
     [90m 285 |[39m       expect(enterpriseSecurity[33m.[39mencryption[33m.[39min_transit)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 286 |[39m       expect(enterpriseSecurity[33m.[39maudit[33m.[39menabled)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 287 |[39m       [0m

      at Object.encryption (tests/configuration/sixsigma-integration.test.js:284:33)

  ‚óè Six Sigma Integration Testing ‚Ä∫ Security and Compliance Integration ‚Ä∫ should align audit requirements with Six Sigma compliance

    TypeError: Cannot read properties of undefined (reading 'audit')

    [0m [90m 291 |[39m
     [90m 292 |[39m     test([32m'should align audit requirements with Six Sigma compliance'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 293 |[39m       [36mconst[39m enterpriseAudit [33m=[39m enterpriseConfig[33m.[39msecurity[33m.[39maudit[33m;[39m
     [90m     |[39m                                                         [31m[1m^[22m[39m
     [90m 294 |[39m       [36mconst[39m enterpriseCompliance [33m=[39m enterpriseConfig[33m.[39menterprise[33m.[39mcompliance_level[33m;[39m
     [90m 295 |[39m       
     [90m 296 |[39m       expect(enterpriseAudit[33m.[39menabled)[33m.[39mtoBe([36mtrue[39m)[33m;[39m[0m

      at Object.audit (tests/configuration/sixsigma-integration.test.js:293:57)

  ‚óè Six Sigma Integration Testing ‚Ä∫ Performance Integration ‚Ä∫ should ensure Six Sigma calculations do not impact enterprise performance

    TypeError: Cannot read properties of undefined (reading 'resource_limits')

    [0m [90m 310 |[39m       
     [90m 311 |[39m       [90m// Enterprise performance settings should be reasonable[39m
    [31m[1m>[22m[39m[90m 312 |[39m       expect(enterprisePerformance[33m.[39mresource_limits[33m.[39mmax_memory_mb)[33m.[39mtoBe([35m8192[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 313 |[39m       expect(enterprisePerformance[33m.[39mresource_limits[33m.[39mmax_analysis_time_seconds)[33m.[39mtoBe([35m3600[39m)[33m;[39m
     [90m 314 |[39m       
     [90m 315 |[39m       [90m// Six Sigma collection should not be too frequent[39m[0m

      at Object.resource_limits (tests/configuration/sixsigma-integration.test.js:312:36)

  ‚óè Six Sigma Integration Testing ‚Ä∫ Integration Validation Tests ‚Ä∫ should validate combined configuration consistency

    TypeError: Cannot read properties of undefined (reading 'quality_gates')

    [0m [90m 329 |[39m         
     [90m 330 |[39m         [90m// Check quality gate alignment[39m
    [31m[1m>[22m[39m[90m 331 |[39m         [36mif[39m ([33m![39menterpriseConfig[33m.[39mgovernance[33m.[39mquality_gates[33m.[39menabled [33m&&[39m sixSigmaConfig[33m.[39menabled) {
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 332 |[39m           issues[33m.[39mpush([32m'Six Sigma enabled but enterprise quality gates disabled'[39m)[33m;[39m
     [90m 333 |[39m         }
     [90m 334 |[39m         [0m

      at quality_gates (tests/configuration/sixsigma-integration.test.js:331:42)
      at Object.validateIntegration (tests/configuration/sixsigma-integration.test.js:354:26)

  ‚óè Six Sigma Integration Testing ‚Ä∫ Integration Validation Tests ‚Ä∫ should validate end-to-end quality pipeline

    TypeError: Cannot read properties of undefined (reading 'quality_gates')

    [0m [90m 362 |[39m         [36mconst[39m pipeline [33m=[39m {
     [90m 363 |[39m           [90m// 1. Enterprise quality gates configuration[39m
    [31m[1m>[22m[39m[90m 364 |[39m           qualityGatesEnabled[33m:[39m enterpriseConfig[33m.[39mgovernance[33m.[39mquality_gates[33m.[39menabled[33m,[39m
     [90m     |[39m                                                            [31m[1m^[22m[39m
     [90m 365 |[39m           nasaComplianceEnabled[33m:[39m enterpriseConfig[33m.[39mgovernance[33m.[39mquality_gates[33m.[39mnasa_compliance[33m.[39menabled[33m,[39m
     [90m 366 |[39m           
     [90m 367 |[39m           [90m// 2. Six Sigma configuration[39m[0m

      at quality_gates (tests/configuration/sixsigma-integration.test.js:364:60)
      at Object.simulateQualityPipeline (tests/configuration/sixsigma-integration.test.js:389:28)

FAIL tests/contract/example.contract.test.js
  ‚óè Test suite failed to run

    Cannot find module 'zod' from 'tests/contract/example.contract.test.js'

    [0m[31m[1m>[22m[39m[90m 1 |[39m [36mconst[39m { z } [33m=[39m require([32m'zod'[39m)[33m;[39m
     [90m   |[39m               [31m[1m^[22m[39m
     [90m 2 |[39m
     [90m 3 |[39m [90m// Contract tests using Zod schemas for validation[39m
     [90m 4 |[39m [90m// These test API contracts, data structures, and external integrations[39m[0m

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.require (tests/contract/example.contract.test.js:1:15)

FAIL tests/property/example.property.test.js
  ‚óè Test suite failed to run

    Cannot find module 'fast-check' from 'tests/property/example.property.test.js'

    [0m[31m[1m>[22m[39m[90m 1 |[39m [36mconst[39m fc [33m=[39m require([32m'fast-check'[39m)[33m;[39m
     [90m   |[39m                                 [31m[1m^[22m[39m
     [90m 2 |[39m
     [90m 3 |[39m [90m// Example property-based tests for common SPEK-AUGMENT functions[39m
     [90m 4 |[39m [90m// These test mathematical invariants and general properties[39m[0m

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/property/example.property.test.js:1:33)

  console.log
    Domain structure validation: {
      expected: 4,
      existing: 4,
      domains: [
        'deployment-orchestration',
        'github-actions',
        'quality-gates',
        'ec'
      ]
    }

      at Object.log (tests/integration/cicd/phase4-integration-validation.test.js:41:17)

  console.log
    Workflow analysis: {
      totalWorkflows: 26,
      analyzedWorkflows: 5,
      averageComplexity: 15.4,
      averageValue: 40,
      theaterWorkflows: 0,
      theaterPercentage: 0,
      optimizable: true
    }

      at Object.log (tests/integration/cicd/phase4-integration-validation.test.js:108:17)

  console.log
    Theater remediation validation: {
      remediationComplete: true,
      evidenceScore: 6,
      maxScore: 6,
      remediationPercentage: 100,
      keyEvidence: {
        realImplementations: true,
        workingFeatures: true,
        verifiableResults: true,
        noTheaterPatterns: true,
        mathematicalCalculations: true,
        functionalCode: true
      }
    }

      at Object.log (tests/integration/cicd/phase4-integration-validation.test.js:156:17)

FAIL tests/six-sigma.test.js
  SixSigmaTelemetry
    DPMO Calculations
      ‚àö should calculate DPMO correctly (12 ms)
      ‚àö should handle zero defects (1 ms)
      ‚àö should throw error for zero units (31 ms)
      ‚àö should throw error for zero opportunities (1 ms)
      ‚àö should round DPMO to nearest integer (1 ms)
    RTY Calculations
      √ó should calculate RTY correctly for multiple processes (4 ms)
      ‚àö should handle single process
      ‚àö should throw error for empty array (1 ms)
      ‚àö should throw error for non-array input (2 ms)
      ‚àö should throw error for invalid yield values (2 ms)
    Sigma Level Calculations
      √ó should calculate sigma level from DPMO (2 ms)
      ‚àö should return 6 for zero DPMO (perfect quality) (1 ms)
      ‚àö should handle very high DPMO
      ‚àö should handle negative DPMO (1 ms)
    Cpk Calculations
      ‚àö should calculate Cpk correctly (1 ms)
      ‚àö should return lower Cpk when process is off-center (1 ms)
      ‚àö should throw error for zero or negative standard deviation (4 ms)
    FTY Calculations
      ‚àö should calculate FTY correctly
      ‚àö should handle zero defects (1 ms)
      ‚àö should handle all units defective
      ‚àö should not go below zero (1 ms)
      ‚àö should throw error for zero units (1 ms)
    Process Data Management
      ‚àö should add process data correctly (3 ms)
      ‚àö should store multiple processes
    Report Generation
      ‚àö should generate empty report when no data (1 ms)
      √ó should generate comprehensive report with data (1 ms)
    Telemetry Point Collection
      ‚àö should collect telemetry point with additional metrics (1 ms)
    Real World Scenarios
      ‚àö should handle manufacturing process with realistic data (5 ms)
      ‚àö should handle service process with quality metrics

  ‚óè SixSigmaTelemetry ‚Ä∫ RTY Calculations ‚Ä∫ should calculate RTY correctly for multiple processes

    expect(received).toBe(expected) // Object.is equality

    Expected: 0.8573
    Received: 0.8565

    [0m [90m 41 |[39m     test([32m'should calculate RTY correctly for multiple processes'[39m[33m,[39m () [33m=>[39m {
     [90m 42 |[39m       [36mconst[39m rty [33m=[39m telemetry[33m.[39mcalculateRTY([[35m0.95[39m[33m,[39m [35m0.98[39m[33m,[39m [35m0.92[39m])[33m;[39m
    [31m[1m>[22m[39m[90m 43 |[39m       expect(rty)[33m.[39mtoBe([35m0.8573[39m)[33m;[39m [90m// 0.95 * 0.98 * 0.92 = 0.857364, rounded to 4 decimals[39m
     [90m    |[39m                   [31m[1m^[22m[39m
     [90m 44 |[39m     })[33m;[39m
     [90m 45 |[39m
     [90m 46 |[39m     test([32m'should handle single process'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toBe (tests/six-sigma.test.js:43:19)

  ‚óè SixSigmaTelemetry ‚Ä∫ Sigma Level Calculations ‚Ä∫ should calculate sigma level from DPMO

    expect(received).toBeLessThan(expected)

    Expected: < 5
    Received:   17.26

    [0m [90m 67 |[39m       [36mconst[39m sigma [33m=[39m telemetry[33m.[39mcalculateSigmaLevel([35m233[39m)[33m;[39m
     [90m 68 |[39m       expect(sigma)[33m.[39mtoBeGreaterThan([35m4.5[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 69 |[39m       expect(sigma)[33m.[39mtoBeLessThan([35m5.0[39m)[33m;[39m
     [90m    |[39m                     [31m[1m^[22m[39m
     [90m 70 |[39m     })[33m;[39m
     [90m 71 |[39m
     [90m 72 |[39m     test([32m'should return 6 for zero DPMO (perfect quality)'[39m[33m,[39m () [33m=>[39m {[0m

      at Object.toBeLessThan (tests/six-sigma.test.js:69:21)

  ‚óè SixSigmaTelemetry ‚Ä∫ Report Generation ‚Ä∫ should generate comprehensive report with data

    expect(received).toBe(expected) // Object.is equality

    Expected: 20000
    Received: 6667

    [0m [90m 169 |[39m       expect(report[33m.[39msummary[33m.[39mtotalUnits)[33m.[39mtoBe([35m150[39m)[33m;[39m
     [90m 170 |[39m       expect(report[33m.[39msummary[33m.[39mtotalOpportunities)[33m.[39mtoBe([35m3[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 171 |[39m       expect(report[33m.[39msummary[33m.[39moverallDPMO)[33m.[39mtoBe([35m20000[39m)[33m;[39m
     [90m     |[39m                                          [31m[1m^[22m[39m
     [90m 172 |[39m       expect(report[33m.[39msummary[33m.[39moverallSigmaLevel)[33m.[39mtoBeGreaterThan([35m3[39m)[33m;[39m
     [90m 173 |[39m       expect(report[33m.[39msummary[33m.[39moverallRTY)[33m.[39mtoBeLessThan([35m1[39m)[33m;[39m
     [90m 174 |[39m       expect(report[33m.[39mprocesses[33m.[39mlength)[33m.[39mtoBe([35m2[39m)[33m;[39m[0m

      at Object.toBe (tests/six-sigma.test.js:171:42)

PASS tests/configuration/validation-helpers.test.js
  Configuration Helper Utilities
    ‚àö ConfigSchemaValidator should be instantiable (1 ms)
    ‚àö ConfigFileUtils should have required methods
    ‚àö EnvVarUtils should handle environment variables (1 ms)
    ‚àö ConfigMerger should merge configurations
    ‚àö PerformanceUtils should measure execution time (2 ms)
    ‚àö TestDataGenerator should generate valid configs (1 ms)

FAIL tests/enterprise/feature-flags/feature-flag-manager.test.js
  FeatureFlagManager
    Initialization
      √ó should initialize with default configuration (16 ms)
      ‚àö should initialize with custom configuration (1 ms)
      ‚àö should initialize flags from configuration (3 ms)
    Flag Registration
      ‚àö should register a simple boolean flag (2 ms)
      ‚àö should register a percentage rollout flag (1 ms)
      ‚àö should register a flag with environment overrides (1 ms)
      ‚àö should register a flag with conditions (1 ms)
    Flag Evaluation
      ‚àö should evaluate simple boolean flag (2 ms)
      ‚àö should evaluate environment-specific flag (1 ms)
      ‚àö should evaluate conditional flag with matching context (1 ms)
      ‚àö should evaluate conditional flag with non-matching context (1 ms)
      ‚àö should return false for non-existent flag (1 ms)
      ‚àö should use cache for repeated evaluations
      ‚àö should evaluate percentage rollout consistently (2 ms)
    Flag Updates
      ‚àö should update flag configuration (1 ms)
      ‚àö should clear cache when flag is updated (1 ms)
      ‚àö should emit flagUpdated event (1 ms)
      ‚àö should throw error when updating non-existent flag (9 ms)
    Circuit Breaker
      √ó should open circuit breaker after multiple failures (1 ms)
    Performance
      ‚àö should evaluate flags within 100ms target
      ‚àö should handle 1000+ concurrent evaluations (41 ms)
    Audit Logging
      √ó should log flag registration
      √ó should log flag evaluation
      √ó should filter audit log by criteria (1 ms)
    Statistics
      ‚àö should provide accurate statistics (1 ms)
    Health Check
      ‚àö should return healthy status for normal operations (1 ms)
    Import/Export
      ‚àö should export flags (1 ms)
      ‚àö should import flags (1 ms)
    Rollback
      ‚àö should rollback flag to previous version (1 ms)
      ‚àö should throw error when no previous version exists (1 ms)
    Variant Testing
      ‚àö should evaluate variant rollout (8 ms)
      ‚àö should consistently assign same variant to same user (1 ms)

  ‚óè FeatureFlagManager ‚Ä∫ Initialization ‚Ä∫ should initialize with default configuration

    expect(received).toBe(expected) // Object.is equality

    Expected: "development"
    Received: "test"

    [0m [90m 26 |[39m         test([32m'should initialize with default configuration'[39m[33m,[39m () [33m=>[39m {
     [90m 27 |[39m             [36mconst[39m manager [33m=[39m [36mnew[39m [33mFeatureFlagManager[39m()[33m;[39m
    [31m[1m>[22m[39m[90m 28 |[39m             expect(manager[33m.[39mconfig[33m.[39menvironment)[33m.[39mtoBe([32m'development'[39m)[33m;[39m
     [90m    |[39m                                                [31m[1m^[22m[39m
     [90m 29 |[39m             expect(manager[33m.[39mconfig[33m.[39mcacheTimeout)[33m.[39mtoBe([35m5000[39m)[33m;[39m
     [90m 30 |[39m             expect(manager[33m.[39mflags[33m.[39msize)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m 31 |[39m         })[33m;[39m[0m

      at Object.toBe (tests/enterprise/feature-flags/feature-flag-manager.test.js:28:48)

  ‚óè FeatureFlagManager ‚Ä∫ Circuit Breaker ‚Ä∫ should open circuit breaker after multiple failures

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

    [0m [90m 271 |[39m             [90m// Circuit breaker should now be open[39m
     [90m 272 |[39m             [36mconst[39m isOpen [33m=[39m flagManager[33m.[39misCircuitBreakerOpen([32m'error_flag'[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 273 |[39m             expect(isOpen)[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 274 |[39m         })[33m;[39m
     [90m 275 |[39m     })[33m;[39m
     [90m 276 |[39m[0m

      at Object.toBe (tests/enterprise/feature-flags/feature-flag-manager.test.js:273:28)

  ‚óè FeatureFlagManager ‚Ä∫ Audit Logging ‚Ä∫ should log flag registration

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 321 |[39m             )[33m;[39m
     [90m 322 |[39m
    [31m[1m>[22m[39m[90m 323 |[39m             expect(registrationEntry)[33m.[39mtoBeDefined()[33m;[39m
     [90m     |[39m                                       [31m[1m^[22m[39m
     [90m 324 |[39m         })[33m;[39m
     [90m 325 |[39m
     [90m 326 |[39m         test([32m'should log flag evaluation'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

      at Object.toBeDefined (tests/enterprise/feature-flags/feature-flag-manager.test.js:323:39)

  ‚óè FeatureFlagManager ‚Ä∫ Audit Logging ‚Ä∫ should log flag evaluation

    expect(received).toBeDefined()

    Received: undefined

    [0m [90m 337 |[39m             )[33m;[39m
     [90m 338 |[39m
    [31m[1m>[22m[39m[90m 339 |[39m             expect(evaluationEntry)[33m.[39mtoBeDefined()[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 340 |[39m             expect(evaluationEntry[33m.[39mdata[33m.[39mcontext[33m.[39muserId)[33m.[39mtoBe([32m'test_user'[39m)[33m;[39m
     [90m 341 |[39m         })[33m;[39m
     [90m 342 |[39m[0m

      at Object.toBeDefined (tests/enterprise/feature-flags/feature-flag-manager.test.js:339:37)

  ‚óè FeatureFlagManager ‚Ä∫ Audit Logging ‚Ä∫ should filter audit log by criteria

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

    [0m [90m 353 |[39m             })[33m;[39m
     [90m 354 |[39m
    [31m[1m>[22m[39m[90m 355 |[39m             expect(filteredLog[33m.[39mlength)[33m.[39mtoBeGreaterThan([35m0[39m)[33m;[39m
     [90m     |[39m                                        [31m[1m^[22m[39m
     [90m 356 |[39m             expect(filteredLog[33m.[39mevery(entry [33m=>[39m entry[33m.[39mcategory [33m===[39m [32m'EVALUATION'[39m))[33m.[39mtoBe([36mtrue[39m)[33m;[39m
     [90m 357 |[39m         })[33m;[39m
     [90m 358 |[39m     })[33m;[39m[0m

      at Object.toBeGreaterThan (tests/enterprise/feature-flags/feature-flag-manager.test.js:355:40)

FAIL tests/sbom.test.js
  ‚óè Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     ‚Ä¢ If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     ‚Ä¢ If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     ‚Ä¢ To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     ‚Ä¢ If you need a custom transformation specify a "transform" option in your config.
     ‚Ä¢ If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    SyntaxError: C:\Users\17175\Desktop\spek template\tests\sbom.test.js: Unexpected reserved word 'package'. (236:12)

    [0m [90m 234 |[39m
     [90m 235 |[39m       [36mconst[39m spdxDoc [33m=[39m sbom[33m.[39mgenerateSPDX()[33m;[39m
    [31m[1m>[22m[39m[90m 236 |[39m       [36mconst[39m [36mpackage[39m [33m=[39m spdxDoc[33m.[39mpackages[[35m0[39m][33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 237 |[39m       
     [90m 238 |[39m       expect([36mpackage[39m[33m.[39mlicenseConcluded)[33m.[39mtoBe([32m'NOASSERTION'[39m)[33m;[39m
     [90m 239 |[39m       expect([36mpackage[39m[33m.[39mlicenseDeclared)[33m.[39mtoBe([32m'NOASSERTION'[39m)[33m;[39m[0m

      at constructor (node_modules/@babel/parser/src/parse-error.ts:95:45)
      at Parser.toParseError [as raise] (node_modules/@babel/parser/src/tokenizer/index.ts:1503:19)
      at Parser.raise [as checkReservedWord] (node_modules/@babel/parser/src/parser/expression.ts:2886:12)
      at Parser.checkReservedWord [as parseIdentifierName] (node_modules/@babel/parser/src/parser/expression.ts:2848:12)
      at Parser.parseIdentifierName [as parseIdentifier] (node_modules/@babel/parser/src/parser/expression.ts:2805:23)
      at Parser.parseIdentifier [as parseBindingAtom] (node_modules/@babel/parser/src/parser/lval.ts:427:17)
      at Parser.parseBindingAtom [as parseVarId] (node_modules/@babel/parser/src/parser/statement.ts:1618:21)
      at Parser.parseVarId [as parseVar] (node_modules/@babel/parser/src/parser/statement.ts:1577:12)
      at Parser.parseVar [as parseVarStatement] (node_modules/@babel/parser/src/parser/statement.ts:1246:10)
      at Parser.parseVarStatement [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:607:21)
      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)
      at Parser.parseStatementLike [as parseStatementListItem] (node_modules/@babel/parser/src/parser/statement.ts:426:17)
      at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1439:16)
      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)
      at Parser.parseBlockBody [as parseBlock] (node_modules/@babel/parser/src/parser/statement.ts:1380:10)
      at Parser.parseBlock [as parseFunctionBody] (node_modules/@babel/parser/src/parser/expression.ts:2616:24)
      at Parser.parseFunctionBody [as parseArrowExpression] (node_modules/@babel/parser/src/parser/expression.ts:2553:10)
      at Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (node_modules/@babel/parser/src/parser/expression.ts:1837:12)
      at Parser.parseParenAndDistinguishExpression [as parseExprAtom] (node_modules/@babel/parser/src/parser/expression.ts:1162:21)
      at Parser.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:734:23)
      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)
      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)
      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)
      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)
      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)
      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)
      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:257:12)
      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3192:12)
      at Parser.allowInAnd [as parseMaybeAssignAllowIn] (node_modules/@babel/parser/src/parser/expression.ts:256:17)
      at Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (node_modules/@babel/parser/src/parser/expression.ts:3306:17)
      at Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (node_modules/@babel/parser/src/parser/expression.ts:2788:18)
      at Parser.parseExprListItem [as parseCallExpressionArguments] (node_modules/@babel/parser/src/parser/expression.ts:1034:14)
      at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (node_modules/@babel/parser/src/parser/expression.ts:914:29)
      at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (node_modules/@babel/parser/src/parser/expression.ts:796:19)
      at Parser.parseSubscript [as parseSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:755:19)
      at Parser.parseSubscripts [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:740:17)
      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)
      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)
      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)
      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)
      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)
      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)
      at Parser.parseMaybeAssign [as parseExpressionBase] (node_modules/@babel/parser/src/parser/expression.ts:226:23)
      at parseExpressionBase (node_modules/@babel/parser/src/parser/expression.ts:217:39)
      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3187:16)
      at Parser.allowInAnd [as parseExpression] (node_modules/@babel/parser/src/parser/expression.ts:217:17)
      at Parser.parseExpression [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:683:23)
      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)
      at Parser.parseStatementLike [as parseStatementListItem] (node_modules/@babel/parser/src/parser/statement.ts:426:17)
      at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1439:16)
      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)
      at Parser.parseBlockBody [as parseBlock] (node_modules/@babel/parser/src/parser/statement.ts:1380:10)
      at Parser.parseBlock [as parseFunctionBody] (node_modules/@babel/parser/src/parser/expression.ts:2616:24)
      at Parser.parseFunctionBody [as parseArrowExpression] (node_modules/@babel/parser/src/parser/expression.ts:2553:10)
      at Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (node_modules/@babel/parser/src/parser/expression.ts:1837:12)
      at Parser.parseParenAndDistinguishExpression [as parseExprAtom] (node_modules/@babel/parser/src/parser/expression.ts:1162:21)
      at Parser.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:734:23)
      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)
      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)
      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)
      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)
      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)
      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)
      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:257:12)
      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3192:12)
      at Parser.allowInAnd [as parseMaybeAssignAllowIn] (node_modules/@babel/parser/src/parser/expression.ts:256:17)
      at Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (node_modules/@babel/parser/src/parser/expression.ts:3306:17)
      at Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (node_modules/@babel/parser/src/parser/expression.ts:2788:18)
      at Parser.parseExprListItem [as parseCallExpressionArguments] (node_modules/@babel/parser/src/parser/expression.ts:1034:14)
      at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (node_modules/@babel/parser/src/parser/expression.ts:914:29)
      at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (node_modules/@babel/parser/src/parser/expression.ts:796:19)
      at Parser.parseSubscript [as parseSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:755:19)
      at Parser.parseSubscripts [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:740:17)
      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)
      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)
      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)
      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)
      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)
      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)
      at Parser.parseMaybeAssign [as parseExpressionBase] (node_modules/@babel/parser/src/parser/expression.ts:226:23)
      at parseExpressionBase (node_modules/@babel/parser/src/parser/expression.ts:217:39)
      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3187:16)
      at Parser.allowInAnd [as parseExpression] (node_modules/@babel/parser/src/parser/expression.ts:217:17)
      at Parser.parseExpression [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:683:23)
      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)
      at Parser.parseStatementLike [as parseStatementListItem] (node_modules/@babel/parser/src/parser/statement.ts:426:17)
      at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1439:16)
      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)
      at Parser.parseBlockBody [as parseBlock] (node_modules/@babel/parser/src/parser/statement.ts:1380:10)
      at Parser.parseBlock [as parseFunctionBody] (node_modules/@babel/parser/src/parser/expression.ts:2616:24)
      at Parser.parseFunctionBody [as parseArrowExpression] (node_modules/@babel/parser/src/parser/expression.ts:2553:10)
      at Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (node_modules/@babel/parser/src/parser/expression.ts:1837:12)
      at Parser.parseParenAndDistinguishExpression [as parseExprAtom] (node_modules/@babel/parser/src/parser/expression.ts:1162:21)
      at Parser.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:734:23)
      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:713:21)
      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:675:23)
      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:409:14)
      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:421:23)
      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:376:23)
      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:301:21)

PASS tests/compliance.test.js
  ComplianceMatrix
    Control Initialization
      ‚àö should initialize with predefined controls (5 ms)
      ‚àö should have proper control mappings between frameworks
      ‚àö should initialize controls with proper default values (1 ms)
    Evidence Management
      ‚àö should add evidence to control (2 ms)
      ‚àö should throw error for non-existent control (26 ms)
      ‚àö should handle multiple evidence items for same control
    Control Assessment
      ‚àö should assess control compliance (2 ms)
      ‚àö should validate assessment status (1 ms)
      ‚àö should throw error for non-existent control (1 ms)
      ‚àö should handle non-compliant assessment with remediation (1 ms)
    Next Assessment Date Calculation
      ‚àö should calculate next assessment dates correctly (1 ms)
    Control Mapping
      ‚àö should get control mappings between frameworks (1 ms)
      ‚àö should handle reverse mapping from ISO27001 to SOC2 (1 ms)
      ‚àö should throw error for non-existent control (1 ms)
    Compliance Reporting
      ‚àö should generate empty compliance report (2 ms)
      ‚àö should generate comprehensive compliance report with data (2 ms)
      ‚àö should identify overdue assessments (1 ms)
    Risk Score Calculation
      ‚àö should calculate risk score correctly
      ‚àö should cap risk score at 100
    Export Functionality
      ‚àö should export matrix as JSON (1 ms)
      ‚àö should export matrix as CSV (1 ms)
      ‚àö should throw error for unsupported export format (1 ms)
    Real World Compliance Scenarios
      ‚àö should handle comprehensive compliance assessment (1 ms)
      ‚àö should track compliance progress over time

  console.error
    Six Sigma Performance Error: {
      message: 'Mock SPC failure',
      context: {},
      timestamp: '2025-09-14T17:48:07.639Z'
    }

    [0m [90m 80 |[39m
     [90m 81 |[39m         [90m// Log error for debugging[39m
    [31m[1m>[22m[39m[90m 82 |[39m         console[33m.[39merror([32m'Six Sigma Performance Error:'[39m[33m,[39m {
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 83 |[39m             message[33m:[39m error[33m.[39mmessage[33m,[39m
     [90m 84 |[39m             context[33m:[39m context[33m,[39m
     [90m 85 |[39m             timestamp[33m:[39m [36mnew[39m [33mDate[39m()[33m.[39mtoISOString()[0m

      at PerformanceMonitor.error [as recordError] (analyzer/enterprise/sixsigma/performance-monitor.js:82:17)
      at SixSigmaReportingSystem.recordError [as generateReport] (analyzer/enterprise/sixsigma/index.js:72:43)
      at Object.<anonymous> (tests/enterprise/sixsigma/sixsigma.test.js:513:17)

FAIL tests/enterprise/sixsigma/sixsigma.test.js
  Six Sigma Reporting System
    SR-001: CTQ Metrics Collector and Calculator
      ‚àö should calculate CTQ metrics correctly (51 ms)
      ‚àö should provide real-time monitoring (4 ms)
      ‚àö should handle invalid data gracefully (30 ms)
      ‚àö should generate appropriate recommendations (40 ms)
    SR-002: SPC Chart Generator
      ‚àö should generate SPC charts with control limits (64 ms)
      ‚àö should detect violations and patterns (29 ms)
      ‚àö should calculate process capability indices (62 ms)
    SR-003: DPMO/RTY Calculator
      ‚àö should calculate DPMO and sigma levels (75 ms)
      ‚àö should calculate RTY correctly (21 ms)
      ‚àö should provide benchmarking data (20 ms)
    SR-004: Theater Detection Integration
      ‚àö should detect theater patterns (41 ms)
      ‚àö should correlate with quality metrics (36 ms)
      ‚àö should assess risk levels correctly (41 ms)
      √ó should handle suspicious metrics (12 ms)
    SR-005: Report Generator
      ‚àö should generate comprehensive reports (45 ms)
      ‚àö should consolidate recommendations correctly (35 ms)
      ‚àö should handle missing data gracefully (10 ms)
    Performance Monitoring (<1.2% overhead)
      ‚àö should monitor execution performance (14 ms)
      ‚àö should detect overhead violations (1 ms)
      ‚àö should maintain compliance tracking (2 ms)
    Integration Tests
      √ó should run complete Six Sigma analysis (16 ms)
      ‚àö should maintain NASA POT10 compliance (95%+) (1 ms)
      ‚àö should handle enterprise configuration (1 ms)
      √ó should generate artifacts in correct directory (42 ms)
    Error Handling and Edge Cases
      √ó should handle empty input data (39 ms)
      ‚àö should handle malformed configuration (34 ms)
      ‚àö should recover from module failures gracefully (72 ms)
  Performance Benchmarks
    √ó should complete full analysis within performance budget (1 ms)

  ‚óè Six Sigma Reporting System ‚Ä∫ SR-004: Theater Detection Integration ‚Ä∫ should handle suspicious metrics

    expect(received).toBeGreaterThan(expected)

    Expected: > 0.3
    Received:   0.2

    [0m [90m 300 |[39m
     [90m 301 |[39m             [36mconst[39m result [33m=[39m [36mawait[39m theaterIntegrator[33m.[39manalyze(suspiciousData[33m,[39m ctqResults)[33m;[39m
    [31m[1m>[22m[39m[90m 302 |[39m             expect(result[33m.[39mtheaterDetection[33m.[39moverallScore)[33m.[39mtoBeGreaterThan([35m0.3[39m)[33m;[39m
     [90m     |[39m                                                          [31m[1m^[22m[39m
     [90m 303 |[39m             expect(result[33m.[39mrecommendations[33m.[39mlength)[33m.[39mtoBeGreaterThan([35m0[39m)[33m;[39m
     [90m 304 |[39m         })[33m;[39m
     [90m 305 |[39m     })[33m;[39m[0m

      at Object.toBeGreaterThan (tests/enterprise/sixsigma/sixsigma.test.js:302:58)

  ‚óè Six Sigma Reporting System ‚Ä∫ Integration Tests ‚Ä∫ should run complete Six Sigma analysis

    expect(received).toHaveProperty(path)

    Expected path: "ctq"
    Received path: []

    Received value: {"artifacts": [Object], "reports": [Object], "summary": [Object], "timestamp": "2025-09-14T17:48:07.504Z"}

    [0m [90m 433 |[39m
     [90m 434 |[39m             [90m// Validate complete analysis[39m
    [31m[1m>[22m[39m[90m 435 |[39m             expect(result)[33m.[39mtoHaveProperty([32m'ctq'[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 436 |[39m             expect(result)[33m.[39mtoHaveProperty([32m'spc'[39m)[33m;[39m
     [90m 437 |[39m             expect(result)[33m.[39mtoHaveProperty([32m'dpmo'[39m)[33m;[39m
     [90m 438 |[39m             expect(result)[33m.[39mtoHaveProperty([32m'theater'[39m)[33m;[39m[0m

      at Object.toHaveProperty (tests/enterprise/sixsigma/sixsigma.test.js:435:28)

  ‚óè Six Sigma Reporting System ‚Ä∫ Integration Tests ‚Ä∫ should generate artifacts in correct directory

    expect(received).toHaveProperty(path)

    Expected path: "artifacts"
    Received path: []

    Received value: {"dashboard": [Object], "detailed": "# Six Sigma Detailed Analysis Report¬∑
    ## Report Metadata
    {
      \"reportId\": \"SR-1757872087527\",
      \"generatedAt\": \"2025-09-14T17:48:07.527Z\",
      \"reportVersion\": \"1.0.0\",
      \"analysisPeriod\": {
        \"start\": \"2025-09-14T17:48:07.527Z\",
        \"end\": \"2025-09-14T17:48:07.527Z\",
        \"duration\": \"1 analysis cycle\"
      },
      \"dataQuality\": \"HIGH\",
      \"compliance\": {
        \"nasaPOT10\": \"95%+\",
        \"sixSigma\": \"Full\",
        \"enterprise\": \"Compliant\"
      }
    }¬∑
    ## CTQ Analysis
    {
      \"overview\": {
        \"totalCTQs\": 7,
        \"overallScore\": 0.9936842105263157,
        \"sigmaLevel\": 3,
        \"defectCount\": 0,
        \"opportunities\": 7
      },
      \"ctqPerformance\": {
        \"security\": {
          \"score\": 0.968421052631579,
          \"status\": \"EXCELLENT\",
          \"variance\": -3,
          \"trend\": \"STABLE\"
        },
        \"nasaPOT10\": {
          \"score\": 1,
          \"status\": \"EXCELLENT\",
          \"variance\": 0,
          \"trend\": \"STABLE\"
        },
        \"connascence\": {
          \"score\": 1,
          \"status\": \"EXCELLENT\",
          \"variance\": 0,
          \"trend\": \"STABLE\"
        },
        \"godObjects\": {
          \"score\": 1,
          \"status\": \"EXCELLENT\",
          \"variance\": 0,
          \"trend\": \"STABLE\"
        },
        \"meceQuality\": {
          \"score\": 1,
          \"status\": \"EXCELLENT\",
          \"variance\": 0,
          \"trend\": \"STABLE\"
        },
        \"testsMutation\": {
          \"score\": 1,
          \"status\": \"EXCELLENT\",
          \"variance\": 0,
          \"trend\": \"STABLE\"
        },
        \"performance\": {
          \"score\": 1,
          \"status\": \"EXCELLENT\",
          \"variance\": 0,
          \"trend\": \"STABLE\"
        }
      },
      \"trends\": {
        \"overall\": \"STABLE\",
        \"direction\": \"MAINTAINING\",
        \"velocity\": 0.02,
        \"prediction\": \"ON_TRACK\"
      },
      \"criticalCTQs\": [],
      \"recommendations\": []
    }¬∑
    ## Statistical Process Control
    {
      \"processStability\": {
        \"stable\": true,
        \"violations\": 0,
        \"trends\": 0,
        \"patterns\": 0,
        \"assessment\": \"STABLE\",
        \"recommendation\": \"Process is in statistical control\"
      },
      \"controlCharts\": {
        \"totalCharts\": 8,
        \"violations\": 0,
        \"patterns\": 0
      },
      \"processCapability\": {
        \"cp\": 1,
        \"cpk\": 0.906,
        \"pp\": 0.95,
        \"ppk\": 0.861,
        \"sigmaLevel\": 3,
        \"interpretation\": \"MARGINAL\"
      },
      \"violations\": {
        \"total\": 0,
        \"high\": 0,
        \"medium\": 0
      },
      \"trends\": {
        \"total\": 0,
        \"increasing\": 0,
        \"decreasing\": 0
      },
      \"recommendations\": []
    }¬∑
    ## DPMO Analysis
    {
      \"processMetrics\": {
        \"overallDPMO\": 6316,
        \"overallSigma\": 3.99,
        \"targetSigma\": 4,
        \"processRTY\": 96.84,
        \"processYield\": 99.37,
        \"ctqCount\": 7,
        \"performanceGap\": 0.01,
        \"costOfPoorQuality\": {
          \"percentage\": 0.19,
          \"category\": \"LOW\",
          \"potentialSavings\": 0.13
        }
      },
      \"ctqDPMO\": [
        {
          \"ctq\": \"security\",
          \"dpmo\": 31579,
          \"yieldRate\": 96.84
        },
        {
          \"ctq\": \"nasaPOT10\",
          \"dpmo\": 0,
          \"yieldRate\": 100
        },
        {
          \"ctq\": \"connascence\",
          \"dpmo\": 0,
          \"yieldRate\": 100
        },
        {
          \"ctq\": \"godObjects\",
          \"dpmo\": 0,
          \"yieldRate\": 100
        },
        {
          \"ctq\": \"meceQuality\",
          \"dpmo\": 0,
          \"yieldRate\": 100
        },
        {
          \"ctq\": \"testsMutation\",
          \"dpmo\": 0,
          \"yieldRate\": 100
        },
        {
          \"ctq\": \"performance\",
          \"dpmo\": 0,
          \"yieldRate\": 100
        }
      ],
      \"yieldAnalysis\": [
        {
          \"ctq\": \"security\",
          \"rty\": 96.84,
          \"fty\": 96.84
        },
        {
          \"ctq\": \"nasaPOT10\",
          \"rty\": 100,
          \"fty\": 100
        },
        {
          \"ctq\": \"connascence\",
          \"rty\": 100,
          \"fty\": 100
        },
        {
          \"ctq\": \"godObjects\",
          \"rty\": 100,
          \"fty\": 100
        },
        {
          \"ctq\": \"meceQuality\",
          \"rty\": 100,
          \"fty\": 100
        },
        {
          \"ctq\": \"testsMutation\",
          \"rty\": 100,
          \"fty\": 100
        },
        {
          \"ctq\": \"performance\",
          \"rty\": 100,
          \"fty\": 100
        }
      ],
      \"sigmaLevels\": [
        {
          \"ctq\": \"security\",
          \"sigmaLevel\": 3,
          \"exactSigma\": 3.36,
          \"classification\": \"AVERAGE\"
        },
        {
          \"ctq\": \"nasaPOT10\",
          \"sigmaLevel\": 6,
          \"exactSigma\": 6,
          \"classification\": \"WORLD_CLASS\"
        },
        {
          \"ctq\": \"connascence\",
          \"sigmaLevel\": 6,
          \"exactSigma\": 6,
          \"classification\": \"WORLD_CLASS\"
        },
        {
          \"ctq\": \"godObjects\",
          \"sigmaLevel\": 6,
          \"exactSigma\": 6,
          \"classification\": \"WORLD_CLASS\"
        },
        {
          \"ctq\": \"meceQuality\",
          \"sigmaLevel\": 6,
          \"exactSigma\": 6,
          \"classification\": \"WORLD_CLASS\"
        },
        {
          \"ctq\": \"testsMutation\",
          \"sigmaLevel\": 6,
          \"exactSigma\": 6,
          \"classification\": \"WORLD_CLASS\"
        },
        {
          \"ctq\": \"performance\",
          \"sigmaLevel\": 6,
          \"exactSigma\": 6,
          \"classification\": \"WORLD_CLASS\"
        }
      ],
      \"benchmarking\": {
        \"currentClass\": \"AVERAGE\",
        \"industryBenchmarks\": {
          \"worldClass\": {
            \"sigma\": 6,
            \"dpmo\": 3.4
          },
          \"excellent\": {
            \"sigma\": 5,
            \"dpmo\": 233
          },
          \"good\": {
            \"sigma\": 4,
            \"dpmo\": 6210
          },
          \"average\": {
            \"sigma\": 3,
            \"dpmo\": 66807
          },
          \"poor\": {
            \"sigma\": 2,
            \"dpmo\": 308538
          }
        },
        \"competitivePosition\": \"AVERAGE\",
        \"improvementOpportunity\": {
          \"status\": \"IMPROVEMENT_NEEDED\",
          \"opportunity\": 1.7,
          \"focus\": \"INCREMENTAL_IMPROVEMENT\"
        }
      },
      \"costOfQuality\": {
        \"copqPercentage\": 0.2,
        \"potentialSavings\": 0.1,
        \"category\": \"LOW\"
      },
      \"recommendations\": []
    }¬∑
    ## Theater Detection
    {
      \"riskAssessment\": {
        \"overallRisk\": \"LOW\",
        \"riskFactors\": [],
        \"riskScore\": 8,
        \"mitigation\": []
      },
      \"theaterDetection\": {
        \"overallScore\": 0.08,
        \"codeTheaterRisk\": \"LOW\",
        \"metricTheaterRisk\": \"LOW\",
        \"testTheaterRisk\": \"LOW\"
      },
      \"qualityCorrelation\": {
        \"confidenceScore\": 1,
        \"validityAssessment\": \"HIGH\",
        \"averageGap\": 0.075
      },
      \"confidenceLevel\": 1,
      \"recommendations\": []
    }¬∑
    ## Consolidated Recommendations
    {
      \"immediate\": [],
      \"shortTerm\": [],
      \"longTerm\": [],
      \"implementation\": {
        \"phase1\": [],
        \"phase2\": [],
        \"phase3\": [],
        \"timeline\": \"3-6 months for full implementation\"
      }
    }¬∑
    ## Appendices
    {
      \"dataQuality\": {
        \"status\": \"Generated\"
      },
      \"methodology\": {
        \"methodology\": \"Six Sigma DMAIC with SPEK integration\"
      },
      \"calculations\": {
        \"calculations\": \"Standard Six Sigma formulas\"
      },
      \"glossary\": {
        \"terms\": \"Six Sigma terminology\"
      },
      \"references\": {
        \"references\": \"Industry standards and best practices\"
      }
    }
    ", "executive": "# Six Sigma Executive Report¬∑
    ## Report ID: SR-1757872087527
    ## Generated: 2025-09-14T17:48:07.527Z¬∑
    ## Executive Summary¬∑
    - Current process sigma level: 3.99 (Target: 4)
    - Overall DPMO: 6316
    - Process RTY: 96.84%
    - Theater risk assessment: LOW
    - CTQ performance: 99.4% overall CTQ score¬∑
    ## Key Performance Indicators¬∑
    - Sigma Level: 3.99
    - DPMO: 6316
    - Process RTY: 96.84%¬∑
    ## Business Impact¬∑
    - Cost of Poor Quality: 0.2%
    - Potential Savings: 0.1%
    - Process Efficiency: 99.8%¬∑
    ## Immediate Actions Required¬∑
    No immediate actions required.¬∑
    ## Executive Recommendation¬∑
    Process improvement required to achieve 4 sigma target. Implement DMAIC methodology for systematic improvement.¬∑
    ---
    *This report was generated using enterprise-grade Six Sigma analysis tools.*
    *NASA POT10 Compliance: 95%+*
    ", "technical": "# Six Sigma Technical Analysis Report¬∑
    ## Technical Summary
    - Analysis Engine: SPEK Six Sigma Reporting System v1.0.0
    - Compliance Level: NASA POT10 95%+
    - Statistical Methods: SPC, DPMO, RTY, Theater Detection
    - Data Quality: HIGH¬∑
    ## Detailed Technical Analysis¬∑
    ### CTQ Calculations
    {
      \"overview\": {
        \"totalCTQs\": 7,
        \"overallScore\": 0.9936842105263157,
        \"sigmaLevel\": 3,
        \"defectCount\": 0,
        \"opportunities\": 7
      },
      \"ctqPerformance\": {
        \"security\": {
          \"score\": 0.968421052631579,
          \"status\": \"EXCELLENT\",
          \"variance\": -3,
          \"trend\": \"STABLE\"
        },
        \"nasaPOT10\": {
          \"score\": 1,
          \"status\": \"EXCELLENT\",
          \"variance\": 0,
          \"trend\": \"STABLE\"
        },
        \"connascence\": {
          \"score\": 1,
          \"status\": \"EXCELLENT\",
          \"variance\": 0,
          \"trend\": \"STABLE\"
        },
        \"godObjects\": {
          \"score\": 1,
          \"status\": \"EXCELLENT\",
          \"variance\": 0,
          \"trend\": \"STABLE\"
        },
        \"meceQuality\": {
          \"score\": 1,
          \"status\": \"EXCELLENT\",
          \"variance\": 0,
          \"trend\": \"STABLE\"
        },
        \"testsMutation\": {
          \"score\": 1,
          \"status\": \"EXCELLENT\",
          \"variance\": 0,
          \"trend\": \"STABLE\"
        },
        \"performance\": {
          \"score\": 1,
          \"status\": \"EXCELLENT\",
          \"variance\": 0,
          \"trend\": \"STABLE\"
        }
      },
      \"trends\": {
        \"overall\": \"STABLE\",
        \"direction\": \"MAINTAINING\",
        \"velocity\": 0.02,
        \"prediction\": \"ON_TRACK\"
      },
      \"criticalCTQs\": [],
      \"recommendations\": []
    }¬∑
    ### SPC Control Charts
    {
      \"processStability\": {
        \"stable\": true,
        \"violations\": 0,
        \"trends\": 0,
        \"patterns\": 0,
        \"assessment\": \"STABLE\",
        \"recommendation\": \"Process is in statistical control\"
      },
      \"controlCharts\": {
        \"totalCharts\": 8,
        \"violations\": 0,
        \"patterns\": 0
      },
      \"processCapability\": {
        \"cp\": 1,
        \"cpk\": 0.906,
        \"pp\": 0.95,
        \"ppk\": 0.861,
        \"sigmaLevel\": 3,
        \"interpretation\": \"MARGINAL\"
      },
      \"violations\": {
        \"total\": 0,
        \"high\": 0,
        \"medium\": 0
      },
      \"trends\": {
        \"total\": 0,
        \"increasing\": 0,
        \"decreasing\": 0
      },
      \"recommendations\": []
    }¬∑
    ### DPMO & Sigma Level Calculations
    {
      \"processMetrics\": {
        \"overallDPMO\": 6316,
        \"overallSigma\": 3.99,
        \"targetSigma\": 4,
        \"processRTY\": 96.84,
        \"processYield\": 99.37,
        \"ctqCount\": 7,
        \"performanceGap\": 0.01,
        \"costOfPoorQuality\": {
          \"percentage\": 0.19,
          \"category\": \"LOW\",
          \"potentialSavings\": 0.13
        }
      },
      \"ctqDPMO\": [
        {
          \"ctq\": \"security\",
          \"dpmo\": 31579,
          \"yieldRate\": 96.84
        },
        {
          \"ctq\": \"nasaPOT10\",
          \"dpmo\": 0,
          \"yieldRate\": 100
        },
        {
          \"ctq\": \"connascence\",
          \"dpmo\": 0,
          \"yieldRate\": 100
        },
        {
          \"ctq\": \"godObjects\",
          \"dpmo\": 0,
          \"yieldRate\": 100
        },
        {
          \"ctq\": \"meceQuality\",
          \"dpmo\": 0,
          \"yieldRate\": 100
        },
        {
          \"ctq\": \"testsMutation\",
          \"dpmo\": 0,
          \"yieldRate\": 100
        },
        {
          \"ctq\": \"performance\",
          \"dpmo\": 0,
          \"yieldRate\": 100
        }
      ],
      \"yieldAnalysis\": [
        {
          \"ctq\": \"security\",
          \"rty\": 96.84,
          \"fty\": 96.84
        },
        {
          \"ctq\": \"nasaPOT10\",
          \"rty\": 100,
          \"fty\": 100
        },
        {
          \"ctq\": \"connascence\",
          \"rty\": 100,
          \"fty\": 100
        },
        {
          \"ctq\": \"godObjects\",
          \"rty\": 100,
          \"fty\": 100
        },
        {
          \"ctq\": \"meceQuality\",
          \"rty\": 100,
          \"fty\": 100
        },
        {
          \"ctq\": \"testsMutation\",
          \"rty\": 100,
          \"fty\": 100
        },
        {
          \"ctq\": \"performance\",
          \"rty\": 100,
          \"fty\": 100
        }
      ],
      \"sigmaLevels\": [
        {
          \"ctq\": \"security\",
          \"sigmaLevel\": 3,
          \"exactSigma\": 3.36,
          \"classification\": \"AVERAGE\"
        },
        {
          \"ctq\": \"nasaPOT10\",
          \"sigmaLevel\": 6,
          \"exactSigma\": 6,
          \"classification\": \"WORLD_CLASS\"
        },
        {
          \"ctq\": \"connascence\",
          \"sigmaLevel\": 6,
          \"exactSigma\": 6,
          \"classification\": \"WORLD_CLASS\"
        },
        {
          \"ctq\": \"godObjects\",
          \"sigmaLevel\": 6,
          \"exactSigma\": 6,
          \"classification\": \"WORLD_CLASS\"
        },
        {
          \"ctq\": \"meceQuality\",
          \"sigmaLevel\": 6,
          \"exactSigma\": 6,
          \"classification\": \"WORLD_CLASS\"
        },
        {
          \"ctq\": \"testsMutation\",
          \"sigmaLevel\": 6,
          \"exactSigma\": 6,
          \"classification\": \"WORLD_CLASS\"
        },
        {
          \"ctq\": \"performance\",
          \"sigmaLevel\": 6,
          \"exactSigma\": 6,
          \"classification\": \"WORLD_CLASS\"
        }
      ],
      \"benchmarking\": {
        \"currentClass\": \"AVERAGE\",
        \"industryBenchmarks\": {
          \"worldClass\": {
            \"sigma\": 6,
            \"dpmo\": 3.4
          },
          \"excellent\": {
            \"sigma\": 5,
            \"dpmo\": 233
          },
          \"good\": {
            \"sigma\": 4,
            \"dpmo\": 6210
          },
          \"average\": {
            \"sigma\": 3,
            \"dpmo\": 66807
          },
          \"poor\": {
            \"sigma\": 2,
            \"dpmo\": 308538
          }
        },
        \"competitivePosition\": \"AVERAGE\",
        \"improvementOpportunity\": {
          \"status\": \"IMPROVEMENT_NEEDED\",
          \"opportunity\": 1.7,
          \"focus\": \"INCREMENTAL_IMPROVEMENT\"
        }
      },
      \"costOfQuality\": {
        \"copqPercentage\": 0.2,
        \"potentialSavings\": 0.1,
        \"category\": \"LOW\"
      },
      \"recommendations\": []
    }¬∑
    ### Theater Detection Algorithms
    {
      \"riskAssessment\": {
        \"overallRisk\": \"LOW\",
        \"riskFactors\": [],
        \"riskScore\": 8,
        \"mitigation\": []
      },
      \"theaterDetection\": {
        \"overallScore\": 0.08,
        \"codeTheaterRisk\": \"LOW\",
        \"metricTheaterRisk\": \"LOW\",
        \"testTheaterRisk\": \"LOW\"
      },
      \"qualityCorrelation\": {
        \"confidenceScore\": 1,
        \"validityAssessment\": \"HIGH\",
        \"averageGap\": 0.075
      },
      \"confidenceLevel\": 1,
      \"recommendations\": []
    }¬∑
    ## Methodology
    {
      \"methodology\": \"Six Sigma DMAIC with SPEK integration\"
    }¬∑
    ## Calculations Reference
    {
      \"calculations\": \"Standard Six Sigma formulas\"
    }
    "}

    [0m [90m 473 |[39m             [36mconst[39m result [33m=[39m [36mawait[39m system[33m.[39mgenerateReport(mockData)[33m;[39m
     [90m 474 |[39m             
    [31m[1m>[22m[39m[90m 475 |[39m             expect(result[33m.[39mreports)[33m.[39mtoHaveProperty([32m'artifacts'[39m)[33m;[39m
     [90m     |[39m                                    [31m[1m^[22m[39m
     [90m 476 |[39m             
     [90m 477 |[39m             [90m// Validate artifact paths[39m
     [90m 478 |[39m             [33mObject[39m[33m.[39mvalues(result[33m.[39mreports[33m.[39martifacts)[33m.[39mforEach(path [33m=>[39m {[0m

      at Object.toHaveProperty (tests/enterprise/sixsigma/sixsigma.test.js:475:36)

  ‚óè Six Sigma Reporting System ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle empty input data

    TypeError: Cannot read properties of undefined (reading 'overallScore')

    [0m [90m 488 |[39m             
     [90m 489 |[39m             expect(result)[33m.[39mtoBeDefined()[33m;[39m
    [31m[1m>[22m[39m[90m 490 |[39m             expect(result[33m.[39mctq[33m.[39moverallScore)[33m.[39mtoBe([35m0[39m)[33m;[39m
     [90m     |[39m                               [31m[1m^[22m[39m
     [90m 491 |[39m             expect(result[33m.[39mctq[33m.[39mdefectCount)[33m.[39mtoBeGreaterThan([35m0[39m)[33m;[39m
     [90m 492 |[39m         })[33m;[39m
     [90m 493 |[39m[0m

      at Object.overallScore (tests/enterprise/sixsigma/sixsigma.test.js:490:31)

  ‚óè Performance Benchmarks ‚Ä∫ should complete full analysis within performance budget

    ReferenceError: mockData is not defined

    [0m [90m 526 |[39m     test([32m'should complete full analysis within performance budget'[39m[33m,[39m [36masync[39m () [33m=>[39m {
     [90m 527 |[39m         [36mconst[39m system [33m=[39m [36mnew[39m [33mSixSigmaReportingSystem[39m()[33m;[39m
    [31m[1m>[22m[39m[90m 528 |[39m         [36mconst[39m largeDataset [33m=[39m {
     [90m     |[39m                              [31m[1m^[22m[39m
     [90m 529 |[39m             [33m...[39mmockData[33m,[39m
     [90m 530 |[39m             codeFiles[33m:[39m [33mArray[39m([35m50[39m)[33m.[39mfill()[33m.[39mmap((_[33m,[39m i) [33m=>[39m ({ path[33m:[39m [32m`file${i}.js`[39m }))[33m,[39m
     [90m 531 |[39m             tests[33m:[39m [33mArray[39m([35m100[39m)[33m.[39mfill()[33m.[39mmap((_[33m,[39m i) [33m=>[39m ({ name[33m:[39m [32m`test${i}`[39m[33m,[39m passed[33m:[39m [36mtrue[39m }))[0m

      at Object.<anonymous> (tests/enterprise/sixsigma/sixsigma.test.js:528:30)

FAIL tests/integration/cicd/phase4-cicd-integration.test.js
  ‚óè Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     ‚Ä¢ If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     ‚Ä¢ If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     ‚Ä¢ To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     ‚Ä¢ If you need a custom transformation specify a "transform" option in your config.
     ‚Ä¢ If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    SyntaxError: C:\Users\17175\Desktop\spek template\src\domains\deployment-orchestration\deployment-agent-real.ts: Support for the experimental syntax 'flow' isn't currently enabled (13:8):

    [0m [90m 11 |[39m [36mimport[39m [33m*[39m [36mas[39m path [36mfrom[39m [32m'path'[39m[33m;[39m
     [90m 12 |[39m
    [31m[1m>[22m[39m[90m 13 |[39m [36mexport[39m [36minterface[39m [33mDeploymentExecution[39m {
     [90m    |[39m        [31m[1m^[22m[39m
     [90m 14 |[39m   id[33m:[39m string[33m;[39m
     [90m 15 |[39m   strategy[33m:[39m [32m'blue-green'[39m [33m|[39m [32m'canary'[39m [33m|[39m [32m'rolling'[39m [33m|[39m [32m'recreate'[39m[33m;[39m
     [90m 16 |[39m   environment[33m:[39m string[33m;[39m[0m

    Add @babel/preset-flow (https://github.com/babel/babel/tree/main/packages/babel-preset-flow) to the 'presets' section of your Babel config to enable transformation.
    If you want to leave it as-is, add @babel/plugin-syntax-flow (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-flow) to the 'plugins' section to enable parsing.

    If you already added the plugin for this syntax to your config, it's possible that your config isn't being loaded.
    You can re-run Babel with the BABEL_SHOW_CONFIG_FOR environment variable to show the loaded configuration:
    	npx cross-env BABEL_SHOW_CONFIG_FOR=C:\Users\17175\Desktop\spek template\src\domains\deployment-orchestration\deployment-agent-real.ts <your build command>
    See https://babeljs.io/docs/configuration#print-effective-configs for more info.

    [0m [90m 25 |[39m
     [90m 26 |[39m [90m// Import Phase 4 CI/CD domain agents[39m
    [31m[1m>[22m[39m[90m 27 |[39m [36mconst[39m { [33mDeploymentOrchestrationAgent[39m } [33m=[39m require([32m'../../../src/domains/deployment-orchestration/deployment-agent-real'[39m)[33m;[39m
     [90m    |[39m                                          [31m[1m^[22m[39m
     [90m 28 |[39m [36mconst[39m { [33mGitHubActionsWorkflowOptimizer[39m } [33m=[39m require([32m'../../../src/domains/github-actions/workflow-optimizer-real'[39m)[33m;[39m
     [90m 29 |[39m [36mconst[39m { [33mEnterpriseComplianceAutomationAgent[39m } [33m=[39m require([32m'../../../src/domains/ec/compliance-automation-agent'[39m)[33m;[39m
     [90m 30 |[39m [36mconst[39m { [33mQualityGatesDomain[39m } [33m=[39m require([32m'../../../src/domains/quality-gates'[39m)[33m;[39m[0m

      at constructor (node_modules/@babel/parser/src/parse-error.ts:95:45)
      at Parser.toParseError [as raise] (node_modules/@babel/parser/src/tokenizer/index.ts:1503:19)
      at Parser.raise [as expectOnePlugin] (node_modules/@babel/parser/src/tokenizer/index.ts:1568:18)
      at Parser.expectOnePlugin [as isExportDefaultSpecifier] (node_modules/@babel/parser/src/parser/statement.ts:2654:16)
      at Parser.isExportDefaultSpecifier [as maybeParseExportDefaultSpecifier] (node_modules/@babel/parser/src/parser/statement.ts:2478:40)
      at Parser.maybeParseExportDefaultSpecifier [as parseExport] (node_modules/@babel/parser/src/parser/statement.ts:2382:29)
      at Parser.parseExport [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:644:25)
      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:477:17)
      at Parser.parseStatementLike [as parseModuleItem] (node_modules/@babel/parser/src/parser/statement.ts:414:17)
      at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1438:16)
      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1412:10)
      at Parser.parseBlockBody [as parseProgram] (node_modules/@babel/parser/src/parser/statement.ts:229:10)
      at Parser.parseProgram [as parseTopLevel] (node_modules/@babel/parser/src/parser/statement.ts:203:25)
      at Parser.parseTopLevel [as parse] (node_modules/@babel/parser/src/parser/index.ts:93:10)
      at parse (node_modules/@babel/parser/src/index.ts:92:38)
      at parser (node_modules/@babel/core/src/parser/index.ts:28:19)
          at parser.next (<anonymous>)
      at normalizeFile (node_modules/@babel/core/src/transformation/normalize-file.ts:49:24)
          at normalizeFile.next (<anonymous>)
      at run (node_modules/@babel/core/src/transformation/index.ts:40:36)
          at run.next (<anonymous>)
      at transform (node_modules/@babel/core/src/transform.ts:29:20)
          at transform.next (<anonymous>)
      at evaluateSync (node_modules/gensync/index.js:251:28)
      at sync (node_modules/gensync/index.js:89:14)
      at fn (node_modules/@babel/core/src/errors/rewrite-stack-trace.ts:99:14)
      at transformSync (node_modules/@babel/core/src/transform.ts:66:52)
      at ScriptTransformer.transformSource (node_modules/@jest/transform/build/ScriptTransformer.js:545:31)
      at ScriptTransformer._transformAndBuildScript (node_modules/@jest/transform/build/ScriptTransformer.js:674:40)
      at ScriptTransformer.transform (node_modules/@jest/transform/build/ScriptTransformer.js:726:19)
      at Object.require (tests/integration/cicd/phase4-cicd-integration.test.js:27:42)

  console.log
    Enterprise integration validation: {
      configExists: true,
      hasEnterpriseFeatures: true,
      hasQualityGates: true,
      hasCompliance: true,
      integrationScore: 4,
      integrationComplete: true
    }

      at Object.log (tests/integration/cicd/phase4-integration-validation.test.js:240:17)

  console.log
    WebSocket server listening on port 3101

      at FeatureFlagAPIServer.log [as setupWebSocket] (src/enterprise/feature-flags/api-server.js:424:17)

  console.log
    GET /health - 200 (5ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /flags - 200 (0ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /flags/test_flag - 200 (1ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /flags/non_existent - 404 (0ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    POST /flags - 201 (0ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    POST /flags - 400 (1ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    PUT /flags/test_flag - 200 (1ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    PUT /flags/non_existent - 404 (1ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /flags/test_flag - 200 (0ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    PATCH /flags/test_flag/toggle - 200 (1ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    POST /flags/test_flag/evaluate - 200 (2ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    POST /flags/evaluate - 200 (1ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    POST /flags/evaluate - 400 (1ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /statistics - 200 (1ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /audit - 200 (1ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /audit - 200 (1ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /audit - 200 (0ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /export - 200 (0ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    POST /import - 200 (1ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    PUT /flags/test_flag - 200 (0ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    POST /flags/test_flag/rollback - 200 (1ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    POST /flags/non_existent/rollback - 404 (0ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    WebSocket client connected from ::1

      at WebSocketServer.log (src/enterprise/feature-flags/api-server.js:384:21)

  console.log
    Cross-domain coordination validation: {
      domainsCoordinated: 4,
      successfulDomains: 4,
      coordinationDuration: 2880.0126,
      coordinationSuccess: true,
      averageDomainResponseTime: 1382.620425,
      domainResults: [
        {
          domain: 'deployment-orchestration',
          success: true,
          responseTime: 1429.2349
        },
        {
          domain: 'github-actions',
          success: true,
          responseTime: 959.3066000000003
        },
        {
          domain: 'quality-gates',
          success: true,
          responseTime: 262.0502999999999
        },
        {
          domain: 'enterprise-compliance',
          success: true,
          responseTime: 2879.8898999999997
        }
      ]
    }

      at Object.log (tests/integration/cicd/phase4-integration-validation.test.js:282:15)

  console.log
    Production readiness assessment: {
      ready: true,
      readinessPercentage: 100,
      passedChecks: 6,
      totalChecks: 6,
      checks: {
        domainStructure: true,
        workflowOptimization: true,
        theaterRemediation: true,
        performanceCompliant: true,
        enterpriseIntegration: true,
        crossDomainCoordination: true
      },
      recommendations: []
    }

      at Object.log (tests/integration/cicd/phase4-integration-validation.test.js:316:15)

  console.log
    
    === INTEGRATION VALIDATION COMPLETE ===

      at log (tests/integration/cicd/phase4-integration-validation.test.js:510:11)

  console.log
    Report generated: C:\Users\17175\Desktop\spek template\docs\phase4\integration\phase4-integration-validation-report.md

      at log (tests/integration/cicd/phase4-integration-validation.test.js:511:11)

  console.log
    Production Ready: YES

      at log (tests/integration/cicd/phase4-integration-validation.test.js:512:11)

  console.log
    Readiness Score: 100.00%

      at log (tests/integration/cicd/phase4-integration-validation.test.js:513:11)

FAIL tests/integration/cicd/phase4-integration-validation.test.js (5.079 s)
  Phase 4 CI/CD Integration Validation
    Component Integration Tests
      ‚àö validate CI/CD domain structure exists (82 ms)
      ‚àö validate GitHub Actions workflows exist and are optimizable (85 ms)
      ‚àö validate theater remediation evidence exists (16 ms)
      √ó validate performance constraints and overhead measurement (597 ms)
      ‚àö validate enterprise configuration integration (2 ms)
    Cross-Domain Coordination Validation
      ‚àö validate domain communication and coordination (2881 ms)
    Production Readiness Assessment
      ‚àö comprehensive production readiness validation (3 ms)

  ‚óè Phase 4 CI/CD Integration Validation ‚Ä∫ Component Integration Tests ‚Ä∫ validate performance constraints and overhead measurement

    expect(received).toBeLessThan(expected)

    Expected: < 50
    Received:   577.8356299999999

    [0m [90m 201 |[39m       [90m// Relaxed constraints for test environment[39m
     [90m 202 |[39m       expect(testResults[33m.[39mperformanceValidation[33m.[39msuccessRate)[33m.[39mtoBeGreaterThanOrEqual([35m80[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 203 |[39m       expect(testResults[33m.[39mperformanceValidation[33m.[39mperformanceOverhead)[33m.[39mtoBeLessThan([35m50[39m)[33m;[39m [90m// Relaxed for test[39m
     [90m     |[39m                                                                     [31m[1m^[22m[39m
     [90m 204 |[39m
     [90m 205 |[39m       console[33m.[39mlog([32m'Performance validation:'[39m[33m,[39m testResults[33m.[39mperformanceValidation)[33m;[39m
     [90m 206 |[39m     })[33m;[39m[0m

      at Object.toBeLessThan (tests/integration/cicd/phase4-integration-validation.test.js:203:69)

  console.log
    PUT /flags/test_flag - 200 (1ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    POST /flags/test_flag/evaluate - 500 (1ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /health - 200 (1ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /health - 200 (0ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /health - 200 (1ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /health - 200 (0ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /health - 200 (0ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /health - 200 (0ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /health - 200 (0ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /health - 200 (0ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /health - 200 (0ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    GET /health - 200 (0ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.warn
    Configuration file not found: null

    [0m [90m 482 |[39m         [36mtry[39m {
     [90m 483 |[39m             [36mif[39m ([33m![39mfs[33m.[39mexistsSync([36mthis[39m[33m.[39moptions[33m.[39mconfigPath)) {
    [31m[1m>[22m[39m[90m 484 |[39m                 console[33m.[39mwarn([32m`Configuration file not found: ${this.options.configPath}`[39m)[33m;[39m
     [90m     |[39m                         [31m[1m^[22m[39m
     [90m 485 |[39m                 [36mreturn[39m[33m;[39m
     [90m 486 |[39m             }
     [90m 487 |[39m[0m

      at FeatureFlagAPIServer.warn [as loadConfiguration] (src/enterprise/feature-flags/api-server.js:484:25)
      at loadConfiguration (src/enterprise/feature-flags/api-server.js:363:28)
      at Layer.handleRequest (node_modules/router/lib/layer.js:152:17)
      at next (node_modules/router/lib/route.js:157:13)
      at Route.dispatch (node_modules/router/lib/route.js:117:3)
      at handle (node_modules/router/index.js:435:11)
      at Layer.handleRequest (node_modules/router/lib/layer.js:152:17)
      at node_modules/router/index.js:295:15
      at processParams (node_modules/router/index.js:582:12)
      at next (node_modules/router/index.js:291:5)
      at Function.handle (node_modules/router/index.js:186:3)
      at router (node_modules/router/index.js:60:12)
      at Layer.handleRequest (node_modules/router/lib/layer.js:152:17)
      at trimPrefix (node_modules/router/index.js:342:13)
      at node_modules/router/index.js:297:9
      at processParams (node_modules/router/index.js:582:12)
      at next (node_modules/router/index.js:291:5)
      at next (src/enterprise/feature-flags/api-server.js:80:13)
      at Layer.handleRequest (node_modules/router/lib/layer.js:152:17)
      at trimPrefix (node_modules/router/index.js:342:13)
      at node_modules/router/index.js:297:9
      at processParams (node_modules/router/index.js:582:12)
      at next (node_modules/router/index.js:291:5)
      at urlencodedParser (node_modules/body-parser/lib/types/urlencoded.js:77:7)
      at Layer.handleRequest (node_modules/router/lib/layer.js:152:17)
      at trimPrefix (node_modules/router/index.js:342:13)
      at node_modules/router/index.js:297:9
      at processParams (node_modules/router/index.js:582:12)
      at next (node_modules/router/index.js:291:5)
      at jsonParser (node_modules/body-parser/lib/types/json.js:109:7)
      at Layer.handleRequest (node_modules/router/lib/layer.js:152:17)
      at trimPrefix (node_modules/router/index.js:342:13)
      at node_modules/router/index.js:297:9
      at processParams (node_modules/router/index.js:582:12)
      at next (node_modules/router/index.js:291:5)
      at cors (node_modules/cors/lib/index.js:188:7)
      at node_modules/cors/lib/index.js:224:17
      at originCallback (node_modules/cors/lib/index.js:214:15)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handleRequest (node_modules/router/lib/layer.js:152:17)
      at trimPrefix (node_modules/router/index.js:342:13)
      at node_modules/router/index.js:297:9
      at processParams (node_modules/router/index.js:582:12)
      at next (node_modules/router/index.js:291:5)
      at internalNext (node_modules/helmet/index.cjs:531:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:311:3)
      at internalNext (node_modules/helmet/index.cjs:529:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:304:3)
      at internalNext (node_modules/helmet/index.cjs:529:6)
      at xPermittedCrossDomainPoliciesMiddleware (node_modules/helmet/index.cjs:297:3)
      at internalNext (node_modules/helmet/index.cjs:529:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:281:3)
      at internalNext (node_modules/helmet/index.cjs:529:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:261:3)
      at internalNext (node_modules/helmet/index.cjs:529:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:254:3)
      at internalNext (node_modules/helmet/index.cjs:529:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:246:3)
      at internalNext (node_modules/helmet/index.cjs:529:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:239:3)
      at internalNext (node_modules/helmet/index.cjs:529:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:207:3)
      at internalNext (node_modules/helmet/index.cjs:529:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:182:3)
      at internalNext (node_modules/helmet/index.cjs:529:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:175:3)
      at internalNext (node_modules/helmet/index.cjs:529:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:159:3)
      at internalNext (node_modules/helmet/index.cjs:529:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:124:4)
      at internalNext (node_modules/helmet/index.cjs:529:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:533:6)
      at Layer.handleRequest (node_modules/router/lib/layer.js:152:17)
      at trimPrefix (node_modules/router/index.js:342:13)
      at node_modules/router/index.js:297:9
      at processParams (node_modules/router/index.js:582:12)
      at next (node_modules/router/index.js:291:5)
      at Function.handle (node_modules/router/index.js:186:3)
      at Function.handle (node_modules/express/lib/application.js:177:15)
      at Server.app (node_modules/express/lib/express.js:38:9)

  console.log
    POST /reload - 200 (19ms)

      at ServerResponse.log (src/enterprise/feature-flags/api-server.js:78:25)

  console.log
    Shutting down Feature Flag API server...

      at FeatureFlagAPIServer.log [as shutdown] (src/enterprise/feature-flags/api-server.js:548:17)


  ‚óè  Cannot log after tests are done. Did you forget to wait for something async in your test?
    Attempted to log "Server shut down complete".

    [0m [90m 556 |[39m         [90m// Close HTTP server[39m
     [90m 557 |[39m         [36mthis[39m[33m.[39mserver[33m.[39mclose(() [33m=>[39m {
    [31m[1m>[22m[39m[90m 558 |[39m             console[33m.[39mlog([32m'Server shut down complete'[39m)[33m;[39m
     [90m     |[39m                     [31m[1m^[22m[39m
     [90m 559 |[39m             process[33m.[39mexit([35m0[39m)[33m;[39m
     [90m 560 |[39m         })[33m;[39m
     [90m 561 |[39m[0m

      at console.log (node_modules/@jest/console/build/CustomConsole.js:141:10)
      at log (src/enterprise/feature-flags/api-server.js:558:21)

  ‚óè  process.exit called with "0"

    [0m [90m 557 |[39m         [36mthis[39m[33m.[39mserver[33m.[39mclose(() [33m=>[39m {
     [90m 558 |[39m             console[33m.[39mlog([32m'Server shut down complete'[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 559 |[39m             process[33m.[39mexit([35m0[39m)[33m;[39m
     [90m     |[39m                     [31m[1m^[22m[39m
     [90m 560 |[39m         })[33m;[39m
     [90m 561 |[39m
     [90m 562 |[39m         [90m// Force shutdown after 10 seconds[39m[0m

      at exit (src/enterprise/feature-flags/api-server.js:559:21)
FAIL tests/enterprise/feature-flags/api-server.test.js
  ‚óè Test suite failed to run

    A jest worker process (pid=14612) crashed for an unknown reason: exitCode=0

      at ChildProcessWorker._onExit (node_modules/jest-worker/build/workers/ChildProcessWorker.js:370:23)

A worker process has failed to exit gracefully and has been force exited. This is likely caused by tests leaking due to improper teardown. Try running with --detectOpenHandles to find leaks. Active timers can also cause this, ensure that .unref() was called on them.
Test Suites: 16 failed, 2 passed, 18 total
Tests:       84 failed, 202 passed, 286 total
Snapshots:   0 total
Time:        23.414 s
Ran all test suites.
{
  "error": {
    "code": 1,
    "summary": "",
    "detail": ""
  }
}
