"""
Extracted configuration service from result_aggregation_profiler

Automatically generated by God Object Decomposer
"""

from typing import Dict, List, Optional, Any
from dataclasses import dataclass
from typing import Any
import sys
import os
from typing import Dict


            class MockConfigManager:
                def __init__(self):
                    pass

                def __init__(self):
                    pass

"""Get default benchmark configuration."""
    def _get_default_benchmark_config(self) -> Dict[str, Any]:
        """Get default benchmark configuration."""
        return {
            'data_volumes': [10, 50, 100, 500, 1000, 5000],
            'correlation_scenarios': [
                {'name': 'low_density', 'data_size': 100, 'correlation_density': 0.2},
                {'name': 'medium_density', 'data_size': 500, 'correlation_density': 0.4},
                {'name': 'high_density', 'data_size': 1000, 'correlation_density': 0.6}
            ],
            'streaming_scenarios': [
                {'name': 'low_rate', 'duration_seconds': 30, 'rate_per_second': 5},
                {'name': 'medium_rate', 'duration_seconds': 60, 'rate_per_second': 25},
                {'name': 'high_rate', 'duration_seconds': 120, 'rate_per_second': 100}
            ]
        }

