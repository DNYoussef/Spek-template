"""
Extracted persistence service from cdi_protection_framework

Automatically generated by God Object Decomposer
"""

from dataclasses import dataclass
import sys
from lib.shared.utilities import get_logger
import os
from typing import Dict, List, Optional, Any
import json


"""Load existing CDI protection data."""
def _load_existing_data(self):
        """Load existing CDI protection data."""
        # Load CDI assets
        assets_db = self.storage_path / "cdi_assets.db"
        if assets_db.exists():
            with sqlite3.connect(assets_db) as conn:
                conn.row_factory = sqlite3.Row
                cursor = conn.execute("SELECT * FROM cdi_assets")

                for row in cursor.fetchall():
                    asset = CDIAsset(
                        asset_id=row['asset_id'],
                        name=row['name'],
                        description=row['description'],
                        classification=CDIClassification(row['classification']),
                        owner=row['owner'],
                        created_at=row['created_at'],
                        updated_at=row['updated_at'],
                        file_path=row['file_path'],
                        data_type=row['data_type'],
                        sensitivity_markers=json.loads(row['sensitivity_markers'] or '[]'),
                        retention_period=row['retention_period'],
                        destruction_date=row['destruction_date'],
                        access_history=json.loads(row['access_history'] or '[]'),
                        protection_requirements=json.loads(row['protection_requirements'] or '{}'),
                        metadata=json.loads(row['metadata'] or '{}')
                    )
                    self.cdi_assets[asset.asset_id] = asset

        logger.info(f"Loaded {len(self.cdi_assets)} CDI assets")

