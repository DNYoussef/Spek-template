{
  "permissions": {
    "allow": [
      "Bash(uvx:*)",
      "Bash(curl:*)",
      "Bash(unzip:*)",
      "Bash(codex:*)",
      "Bash(gemini:*)",
      "Bash(claude --version)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(tree:*)",
      "Read(//c/Users/17175/Desktop/connascence/analyzer/**)",
      "Read(//c/Users/17175/Desktop/connascence/interfaces/cli/**)",
      "Read(//c/Users/17175/Desktop/connascence/interfaces/core/**)",
      "Read(//c/Users/17175/Desktop/connascence/.github/**)",
      "Bash(robocopy:*)",
      "Bash(echo:*)",
      "Bash(chmod:*)",
      "Bash(claude-flow --version)",
      "Bash(claude-flow:*)",
      "Bash(claude mcp:*)",
      "Read(//c/Users/17175/AppData/**)",
      "Bash(find:*)",
      "Bash(./scripts/update_agents_spek_augment.sh:*)",
      "Bash(bash -c 'find .claude/agents -name \"\"*.md\"\" | head -5 | while read file; do echo \"\"Processing: $file\"\"; done')",
      "Bash(node:*)",
      "Bash(./scripts/lint_agents.sh:*)",
      "Bash(./scripts/batch_update_agents.sh:*)",
      "Bash(scripts/ops_tripwires.sh report:*)",
      "Bash(scripts/sandbox_janitor.sh report:*)",
      "Bash(cat:*)",
      "Bash(scripts/self_correct.sh:*)",
      "Bash(scripts/gate_fail_reason.sh:*)",
      "Bash(git push:*)",
      "Bash(git checkout:*)",
      "Bash(git merge:*)",
      "Bash(git remote add:*)",
      "Bash(git pull:*)",
      "mcp__ide__executeCode",
      "Bash(npx:*)",
      "Bash(scripts/audit_swarm.sh:*)",
      "Bash(scripts/contextual_loop.sh:*)",
      "Bash(scripts/reality_validator.sh:*)",
      "Bash(scripts/memory_bridge.sh:*)",
      "Bash(scripts/analyzer_improvement_loop.sh:*)",
      "Bash(./scripts/audit_swarm.sh:*)",
      "Bash(./scripts/analyzer_improvement_loop.sh:*)",
      "Bash(gh run list:*)",
      "Bash(./scripts/run_complete_quality_loop.sh:*)",
      "Bash(./scripts/intelligent_failure_analysis.sh:*)",
      "Bash(./scripts/simple_quality_loop.sh:*)",
      "Bash(mkdir:*)",
      "Bash(python:*)",
      "WebSearch",
      "Bash(npm test:*)",
      "Bash(npm install)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run lint)",
      "Bash(gh workflow list:*)",
      "Bash(gh api:*)",
      "Bash(ls:*)",
      "Bash(pip install:*)",
      "Bash(gh workflow run:*)",
      "Bash(timeout 30 python analyzer/core.py --path . --format json --output /dev/null)",
      "Read(//tmp/**)",
      "Bash(timeout:*)",
      "Bash(./simulate_actions.sh:*)",
      "Bash(git --version)",
      "Bash(npm run build:*)",
      "Bash(bash --version)",
      "Bash(bash post-completion-cleanup.sh:*)",
      "Bash(xxd:*)",
      "Bash(bash:*)",
      "Bash(npm install:*)"
    ],
    "deny": [],
    "ask": []
  },
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Task",
        "hooks": [
          {
            "type": "command",
            "command": "./scripts/audit_swarm.sh --mode comprehensive --theater true --evidence comprehensive || true"
          }
        ]
      },
      {
        "matcher": "Edit",
        "hooks": [
          {
            "type": "command",
            "command": "scripts/contextual_loop.sh .claude/.artifacts/audit_analysis.json --theater-focused --memory-update || true"
          }
        ]
      },
      {
        "matcher": "MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "scripts/contextual_loop.sh .claude/.artifacts/audit_analysis.json --theater-focused --memory-update || true"
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "Bash(git commit:*)",
        "hooks": [
          {
            "type": "command",
            "command": "scripts/reality_validator.sh --scope comprehensive --deployment --user-journey"
          }
        ]
      }
    ],
    "SessionEnd": [
      {
        "matcher": "*",
        "hooks": [
          {
            "type": "command",
            "command": "scripts/memory_bridge.sh sync || true"
          }
        ]
      }
    ]
  }
}