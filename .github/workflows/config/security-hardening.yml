# Security Hardening Configuration
# Phase 2B: Standardized Security Pipeline Integration

# Security Analysis Matrix
security_analyses:
  sast:
    name: "Static Application Security Testing"
    runner: "ubuntu-latest-4-core"
    timeout: 30
    tools:
      - "bandit"
      - "semgrep" 
      - "codeql"
    severity_levels: ["critical", "high", "medium", "low"]
    
  supply_chain:
    name: "Supply Chain Security"
    runner: "ubuntu-latest"
    timeout: 20
    tools:
      - "safety"
      - "pip-audit"
      - "dependency-check"
    focus_areas:
      - "dependency_vulnerabilities"
      - "license_compliance"
      - "outdated_packages"
  
  secrets_detection:
    name: "Secrets Detection"
    runner: "ubuntu-latest"
    timeout: 15
    tools:
      - "truffleHog"
      - "detect-secrets"
      - "gitleaks"
    scan_scope: ["code", "history", "config"]

# Security Quality Gates
quality_gates:
  critical_findings:
    max_allowed: 0
    block_deployment: true
    notification: "immediate"
    
  high_findings:
    max_allowed: 3
    block_deployment: true
    notification: "immediate"
    
  medium_findings:
    max_allowed: 10
    block_deployment: false
    notification: "daily_digest"
    
  dependency_age:
    max_days_behind: 90
    block_deployment: false
    notification: "weekly"

# NASA POT10 Security Compliance
nasa_compliance:
  rule_3_assertions: 
    enabled: true
    min_coverage: "90%"
    
  rule_7_memory_bounds:
    enabled: true
    max_memory_usage: "80%"
    
  rule_8_error_handling:
    enabled: true
    uncaught_exceptions: 0
    
  rule_9_loop_bounds:
    enabled: true
    max_iterations: 10000
    
  rule_10_function_size:
    enabled: true
    max_lines: 60
    max_statements: 50

# Security Pipeline Integration
pipeline_stages:
  pre_analysis:
    - "dependency_installation"
    - "environment_validation" 
    - "security_tool_setup"
    
  analysis:
    - "sast_scanning"
    - "dependency_scanning"
    - "secrets_detection"
    - "license_compliance"
    
  post_analysis:
    - "vulnerability_assessment"
    - "compliance_validation"
    - "security_gate_evaluation"
    - "artifact_generation"

# Notification and Reporting
notifications:
  security_team:
    critical_findings: "slack_immediate"
    compliance_failures: "email_immediate"
    
  development_team:
    high_findings: "github_pr_comment"
    gate_failures: "github_issue"
    
  management:
    weekly_summary: "email_digest"
    compliance_status: "dashboard_update"

# Integration Points
integrations:
  github_security:
    enable_dependency_alerts: true
    enable_code_scanning: true
    enable_secret_scanning: true
    
  external_tools:
    sonarqube_integration: false
    snyk_integration: false
    custom_scanners: []