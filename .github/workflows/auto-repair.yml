name: Auto Repair
on:
  workflow_run:
    workflows: ["Quality Gates"]
    types: [completed]

jobs:
  repair:
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: quality-gates-artifacts
          path: .claude/.artifacts/
        continue-on-error: true

      - name: Setup Node.js & Python
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          if [ -f package.json ]; then npm ci || npm i; fi
          pip install -e ./analyzer || pip install connascence-analyzer

      - name: Check for Claude Flow
        run: |
          echo "[SEARCH] Looking for Claude Flow runner..."
          echo "Available tools:"
          which claude || echo "Claude Code: not found"
          which flow || echo "Flow runner: not found"
          echo "[NOTE] Auto-repair would execute: flow run flow/workflows/ci-auto-repair.yaml"

      - name: Placeholder Auto-Repair
        run: |
          echo "[TOOL] Auto-repair simulation (placeholder)"
          echo "Would analyze failures and attempt bounded fixes..."
          echo "Failed workflow: ${{ github.event.workflow_run.conclusion }}"
          echo "Artifacts available:"
          ls -la .claude/.artifacts/ || echo "No artifacts found"

      - name: Comment on PR
        if: github.event.workflow_run.event == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const run_id = ${{ github.event.workflow_run.id }};
            
            github.rest.issues.createComment({
              owner,
              repo,
              issue_number: context.issue.number,
              body: `? **Auto-Repair Attempted**
              
              Quality Gates failed, attempted auto-repair analysis.
              
              [CHART] **Artifacts Available:**
              - Tests, TypeCheck, Lint results
              - Security scan (Semgrep) 
              - Connascence analysis
              - Coverage analysis
              
              [TOOL] **Next Steps:**
              1. Review artifacts in workflow run
              2. Manual intervention may be required for complex issues
              3. Consider running: \`flow run flow/workflows/ci-auto-repair.yaml\`
              
              Run ID: ${run_id}`
            });
        continue-on-error: true